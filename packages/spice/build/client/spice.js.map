{"version":3,"file":"spice.js","sources":["../../src/components/FormField/components/item/Input.tsx","../../src/components/FormField/components/item/Select.tsx","../../src/components/FormField/components/FieldLayout.tsx","../../src/components/FormField/components/item/Textarea.tsx","../../src/components/FormField/index.tsx","../../src/utils/promiseMaker.ts","../../src/components/ModalButton/index.tsx","../../src/components/Tab/Context.tsx","../../src/components/Tab/Button.tsx","../../src/utils/setTabIndex.ts","../../src/components/Tab/Content.tsx","../../src/components/Tab/useTabSwitch.ts","../../src/components/Accordion/Context.tsx","../../src/components/Accordion/Button.tsx","../../src/hooks/useResizeObserver/index.tsx","../../src/components/Accordion/Content.tsx","../../src/hooks/useIntersectionObserver/index.ts","../../src/hooks/useIsomorphicLayoutEffect/index.tsx","../../src/hooks/useFrame/index.tsx","../../src/components/InfinityLoop/index.tsx","../../src/components/CustomBreakLineParser/index.tsx","../../src/components/SplitText/index.tsx","../../src/components/Video/index.tsx","../../src/components/Loader/index.tsx","../../src/components/StableScroller/index.tsx","../../src/hooks/useWindowResizeObserver/index.ts","../../src/hooks/useStarter/utils/funtech.ts","../../src/hooks/useStarter/utils/fixViewportForSmall.ts","../../src/hooks/useStarter/index.ts","../../src/hooks/useIsTouchDevice/index.ts","../../src/hooks/useMediaQuery/index.ts","../../src/hooks/useShare/index.ts","../../src/hooks/useDeviceDetector/index.ts","../../src/hooks/useOnHovering/index.ts","../../src/hooks/useValidElement/index.tsx","../../src/hooks/useScrollTrigger/index.tsx"],"sourcesContent":["import { FormProps } from \"../..\";\n\nexport const Input = ({ formProps }: { formProps: FormProps }) => {\n   const { style, ...rest } = formProps;\n   return (\n      <input\n         {...rest}\n         style={{\n            overflow: \"hidden\",\n            ...style,\n         }}\n      />\n   );\n};\n","import { SelectProps } from \"../..\";\n\nexport const Select = ({ formProps }: { formProps: SelectProps }) => {\n   const { isSelect, style, ...rest } = formProps;\n   if (!isSelect) {\n      return;\n   }\n\n   const DefaultValue = () => {\n      const defaultValue = isSelect.defaultValue;\n      if (!defaultValue) {\n         return null;\n      }\n      return <option hidden>{defaultValue}</option>;\n   };\n\n   const getSelectedIndex = () => {\n      const i = isSelect.defaultSelectedIndex;\n      if (!i) {\n         return undefined;\n      }\n      return isSelect.options[i];\n   };\n\n   return (\n      <select\n         {...rest}\n         style={{\n            overflow: \"hidden\",\n            fontSize: \"16px\",\n            ...(style || {}),\n         }}\n         defaultValue={getSelectedIndex()}>\n         <DefaultValue />\n         {isSelect.options.map((option: any) => {\n            return (\n               <option key={option} value={option}>\n                  {option}\n               </option>\n            );\n         })}\n      </select>\n   );\n};\n","import { FormProps } from \"..\";\n\nexport type FormItem = React.FC<{\n   formProps: FormProps;\n}>;\n\ntype FieldLayoutProps = {\n   layoutType: \"block\" | \"flex\" | \"radio-check\";\n   formPropsArr: FormProps[];\n   label?: string | React.ReactNode;\n   FormItem: FormItem;\n   errors?: React.ReactNode[] | React.ReactNode;\n};\n\nconst RADIO_CHECKBOX_STYLE = {\n   position: \"absolute\",\n   whiteSpace: \"nowrap\",\n   width: \"1px\",\n   height: \"1px\",\n   overflow: \"hidden\",\n   border: \"0\",\n   padding: 0,\n   clip: \"rect(0 0 0 0)\",\n   clipPath: \"inset(50%)\",\n   zIndex: \"-99999\",\n} as React.CSSProperties;\n\nexport const FieldLayout = ({\n   layoutType,\n   formPropsArr,\n   label,\n   FormItem,\n   errors,\n}: FieldLayoutProps) => {\n   const ErrorMessage = ({ index }: { index: number }) => {\n      if (!errors) {\n         return null;\n      }\n      if (Array.isArray(errors)) {\n         return errors[index];\n      }\n      return errors;\n   };\n\n   if (layoutType === \"block\") {\n      return (\n         <>\n            {label && <label htmlFor={formPropsArr[0].id}>{label}</label>}\n            <FormItem formProps={formPropsArr[0]} />\n            <ErrorMessage index={0} />\n         </>\n      );\n   }\n\n   if (layoutType === \"flex\") {\n      return (\n         <>\n            {label && <label htmlFor={formPropsArr[0].id}>{label}</label>}\n            <ul>\n               <li>\n                  <FormItem formProps={formPropsArr[0]} />\n                  <ErrorMessage index={0} />\n               </li>\n               <li>\n                  <FormItem formProps={formPropsArr[1]} />\n                  <ErrorMessage index={1} />\n               </li>\n            </ul>\n         </>\n      );\n   }\n\n   if (layoutType === \"radio-check\") {\n      const Options = formPropsArr.map(\n         ({ id, value, style, optionLabel, ...rest }) => {\n            return (\n               <li key={id}>\n                  <FormItem\n                     formProps={{\n                        id,\n                        value,\n                        style: {\n                           ...RADIO_CHECKBOX_STYLE,\n                           ...(style || {}),\n                        },\n                        ...rest,\n                     }}\n                  />\n                  <label htmlFor={id}>{optionLabel || value}</label>\n               </li>\n            );\n         }\n      );\n      return (\n         <>\n            {label && <label>{label}</label>}\n            <ul>{Options}</ul>\n            <ErrorMessage index={0} />\n         </>\n      );\n   }\n};\n","import { TextareaProps } from \"../..\";\n\nexport const Textarea = ({ formProps }: { formProps: TextareaProps }) => {\n   const { isTextarea, ...rest } = formProps;\n   if (!isTextarea) {\n      return;\n   }\n   return <textarea {...rest} {...isTextarea}></textarea>;\n};\n","import { Input } from \"./components/item/Input\";\nimport { Select } from \"./components/item/Select\";\nimport { FieldLayout } from \"./components/FieldLayout\";\nimport { Textarea } from \"./components/item/Textarea\";\n\ntype SelectOptions = {\n   defaultValue?: string;\n   defaultSelectedIndex?: number;\n   options: string[];\n};\n\nexport type SelectProps = {\n   isSelect?: SelectOptions;\n} & React.SelectHTMLAttributes<HTMLSelectElement>;\n\nexport type TextareaProps = {\n   isTextarea?: React.TextareaHTMLAttributes<HTMLTextAreaElement>;\n} & React.TextareaHTMLAttributes<HTMLTextAreaElement>;\n\ntype OptionLabel = {\n   optionLabel?: React.ReactNode;\n};\n\nexport type FormProps = React.InputHTMLAttributes<HTMLInputElement> &\n   SelectProps &\n   TextareaProps &\n   OptionLabel;\n\nexport type FormFieldsProps = {\n   label?: string | React.ReactNode;\n   /**  param formProps If you set two in an array, they will be arranged as flex. For select and textarea, set tag attributes to isSelect and isTextarea, respectively. */\n   formProps: FormProps[] | FormProps;\n   /** React.ReactNode[] for validation */\n   errors?: React.ReactNode[] | React.ReactNode;\n} & React.FieldsetHTMLAttributes<HTMLFieldSetElement>;\n\n/**\n *\n * ```jsx\n * <FormField\n\t\tclassName={s.field}\n\t\tlabel=\"Mail\"\n\t\tformProps={{\n\t\t\ttype: \"email\",\n\t\t\tid: \"e-mail\",\n\t\t\tplaceholder: \"t.hashimoto@funtech.inc\",\n\t\t\t...register(\"email\", {\n\t\t\t\trequired: VALIDATION.required,\n\t\t\t\tpattern: {\n\t\t\t\t\tvalue: VALIDATION.emailRegExp,\n\t\t\t\t\tmessage: VALIDATION.email,\n\t\t\t\t},\n\t\t\t}),\n\t\t}}\n\t\terrors={<Error error={errors?.email?.message || \"\"} />}\n\t/>\n```\n */\nexport const FormField = ({\n   label,\n   formProps,\n   errors,\n   ...rest\n}: FormFieldsProps) => {\n   if (errors && Array.isArray(errors) && errors.length > 2) {\n      throw new Error(\"The length of error is up to 2.\");\n   }\n\n   const formPropsArr = Array.isArray(formProps) ? formProps : [formProps];\n\n   const { type, isSelect, isTextarea } = formPropsArr[0];\n   const propsLength = formPropsArr.length;\n\n   if (!(type === \"radio\" || type === \"checkbox\") && propsLength > 2) {\n      throw new Error(\"The length of formProps is up to 2.\");\n   }\n\n   const layoutType = [\"radio\", \"checkbox\"].includes(type || \"\")\n      ? \"radio-check\"\n      : propsLength === 1\n      ? \"block\"\n      : \"flex\";\n\n   return (\n      <fieldset {...rest}>\n         <FieldLayout\n            layoutType={layoutType}\n            formPropsArr={formPropsArr}\n            label={label}\n            errors={errors}\n            FormItem={isSelect ? Select : isTextarea ? Textarea : Input}\n         />\n      </fieldset>\n   );\n};\n","export const promiseMaker = (\n   callbackResult: void | Promise<unknown> | null\n): Promise<null> => {\n   return new Promise((resolve) => {\n      if (callbackResult instanceof Promise) {\n         callbackResult.then(() => {\n            resolve(null);\n         });\n      } else {\n         resolve(null);\n      }\n   });\n};\n","\"use client\";\n\nimport { useRef, useEffect, useCallback, forwardRef } from \"react\";\nimport { promiseMaker } from \"../../utils/promiseMaker\";\n\nexport type ModalButtonProps = {\n   dialog: React.DialogHTMLAttributes<HTMLDialogElement>;\n   /** set focus to `focusTarget` when the modal is opened */\n   focusTarget?: React.RefObject<HTMLElement>;\n   onOpen?: (dialog: Element) => void;\n   onClose?: (dialog: Element) => void;\n   /** scroll lock behavior. default : `true` */\n   scrollLock?: boolean;\n} & React.ButtonHTMLAttributes<HTMLButtonElement>;\n\ntype StyleStore = {\n   paddingRight: number;\n   scrollbarWidth: number;\n};\n\nconst DIALOG_STYLE: React.CSSProperties = {\n   border: \"none\",\n   background: \"none\",\n   maxWidth: \"100%\",\n   maxHeight: \"100%\",\n   width: \"100%\",\n   height: \"100%\",\n   padding: \"0\",\n   pointerEvents: \"auto\",\n};\n\nexport const MODAL_CLASSNAME = {\n   close: \"spice__modal_close\",\n   scrollArea: \"js_modal_scroll_area\",\n};\n\nconst getPaddingRight = () =>\n   parseInt(getComputedStyle(document.documentElement).paddingRight, 10) || 0;\nconst getScrollbarWidth = () =>\n   window.innerWidth - document.documentElement.clientWidth;\n\nconst toggleScrollLock = (\n   lock: boolean,\n   { paddingRight, scrollbarWidth }: StyleStore\n) => {\n   const htmlRootStyle = document.documentElement.style;\n   const bodyStyle = document.body.style;\n   const adjustedPaddingRight = lock\n      ? paddingRight + scrollbarWidth\n      : paddingRight - scrollbarWidth;\n   htmlRootStyle.paddingRight = `${adjustedPaddingRight}px`;\n   htmlRootStyle.scrollbarGutter = lock ? \"auto\" : \"\";\n   bodyStyle.overflow = lock ? \"hidden\" : \"\";\n};\n\nexport const ModalButton = forwardRef<HTMLButtonElement, ModalButtonProps>(\n   (\n      { dialog, onOpen, onClose, focusTarget, scrollLock = true, ...rest },\n      ref\n   ) => {\n      const dialogRef = useRef<HTMLDialogElement>(null);\n      const styleStore = useRef<StyleStore>({\n         paddingRight: 0,\n         scrollbarWidth: 0,\n      });\n\n      const showModal = useCallback(() => {\n         if (scrollLock) {\n            styleStore.current.paddingRight = getPaddingRight();\n            styleStore.current.scrollbarWidth = getScrollbarWidth();\n            toggleScrollLock(true, styleStore.current);\n         }\n         dialogRef.current!.showModal();\n         focusTarget?.current?.focus();\n         dialogRef.current\n            ?.getElementsByClassName(MODAL_CLASSNAME.scrollArea)[0]\n            ?.scrollTo(0, 0);\n         onOpen?.(dialogRef.current!);\n      }, [onOpen, focusTarget, scrollLock]);\n\n      const closeModal = useCallback(async () => {\n         if (onClose) {\n            await promiseMaker(onClose(dialogRef.current!));\n         }\n         if (scrollLock) {\n            styleStore.current.paddingRight = getPaddingRight();\n            toggleScrollLock(false, styleStore.current);\n         }\n         dialogRef.current!.close();\n      }, [onClose, scrollLock]);\n\n      // close the modal when ‘spice__modal_close’ is clicked.\n      useEffect(() => {\n         const closeBtn = dialogRef.current!.querySelectorAll(\n            `.${MODAL_CLASSNAME.close}`\n         );\n         if (!closeBtn) return;\n         closeBtn.forEach((element) =>\n            element.addEventListener(\"click\", closeModal)\n         );\n         return () =>\n            closeBtn.forEach((element) =>\n               element.removeEventListener(\"click\", closeModal)\n            );\n      }, [closeModal]);\n\n      // close the modal when the Esc key on the keyboard is pressed.\n      useEffect(() => {\n         const keyDownHandler = (event: globalThis.KeyboardEvent) => {\n            const isOpen = dialogRef.current?.hasAttribute(\"open\");\n            if (isOpen && event.key === \"Escape\") closeModal();\n         };\n         window.addEventListener(\"keydown\", keyDownHandler);\n         return () => window.removeEventListener(\"keydown\", keyDownHandler);\n      }, [closeModal]);\n\n      return (\n         <>\n            <button\n               ref={ref}\n               {...rest}\n               onClick={(e) => {\n                  showModal();\n                  rest?.onClick?.(e);\n               }}\n            />\n            <dialog\n               ref={dialogRef}\n               {...dialog}\n               onClick={(e: React.MouseEvent<HTMLDialogElement>) => {\n                  if (e.target === dialogRef.current) closeModal();\n                  dialog.onClick?.(e);\n               }}\n               style={{\n                  ...DIALOG_STYLE,\n                  ...(dialog.style || {}),\n               }}\n            />\n         </>\n      );\n   }\n);\n\nModalButton.displayName = \"ModalButton\";\n","import {\n   Dispatch,\n   SetStateAction,\n   createContext,\n   useContext,\n   useState,\n} from \"react\";\n\ntype TabState = {\n   isLeaving: boolean;\n   isAnimation: boolean;\n   prev: string;\n   current: string;\n   next: string;\n};\n\nconst defaultState: TabState = {\n   isLeaving: false,\n   isAnimation: true,\n   prev: \"\",\n   current: \"\",\n   next: \"\",\n};\n\nconst tabStateContext = createContext<TabState>(defaultState);\nconst setTabStateContext = createContext<Dispatch<SetStateAction<TabState>>>(\n   () => undefined\n);\n\nexport type ContextProps = {\n   children: React.ReactNode;\n   /** Please set the value that you want to open by default. */\n   defaultValue: string;\n};\n\nexport const Context = ({ children, defaultValue }: ContextProps) => {\n   if (defaultValue === \"\") {\n      throw new Error(\n         \"Please set the value to something other than an empty string.\"\n      );\n   }\n   const [tabState, setTabState] = useState({\n      isLeaving: false,\n      isAnimation: true,\n      prev: \"\",\n      current: defaultValue,\n      next: \"\",\n   });\n   return (\n      <tabStateContext.Provider value={tabState}>\n         <setTabStateContext.Provider value={setTabState}>\n            {children}\n         </setTabStateContext.Provider>\n      </tabStateContext.Provider>\n   );\n};\n\nexport const useTabState = () => useContext(tabStateContext);\nexport const useSetTabState = () => useContext(setTabStateContext);\n","import { useCallback } from \"react\";\nimport { useSetTabState, useTabState } from \"./Context\";\n\nexport type ButtonProps = {\n   /** Please make sure to set it with the value of the Content component. */\n   value: string;\n} & React.ButtonHTMLAttributes<HTMLButtonElement>;\n\nexport const Button = ({ children, value, ...rest }: ButtonProps) => {\n   if (value === \"\") {\n      throw new Error(\n         \"Please set the value to something other than an empty string.\"\n      );\n   }\n   const setTabState = useSetTabState();\n   const tabState = useTabState();\n\n   const clickHandler = useCallback(() => {\n      if (tabState.current === value || tabState.isLeaving) {\n         return;\n      }\n      setTabState((state) => {\n         return {\n            ...state,\n            isLeaving: true,\n            isAnimation: true,\n            prev: state.current,\n            next: value,\n         };\n      });\n   }, [setTabState, tabState, value]);\n\n   return (\n      <button\n         onClick={clickHandler}\n         role=\"tab\"\n         aria-controls={`tab-${value}`}\n         aria-selected={tabState.current === value}\n         {...rest}>\n         {children}\n      </button>\n   );\n};\n","type SetTabIndexProps = {\n   content: HTMLDivElement;\n   isOpen: boolean;\n};\nexport const setTabIndex = ({ content, isOpen }: SetTabIndexProps) => {\n   const clickableElms = content.querySelectorAll(\"a,button\");\n   if (!clickableElms) {\n      return;\n   }\n   const tabIndex = isOpen ? \"0\" : \"-1\";\n   clickableElms.forEach((element) => {\n      element.setAttribute(\"tabindex\", tabIndex);\n   });\n};\n","import { useEffect, useRef } from \"react\";\nimport { useTabState, useSetTabState } from \"./Context\";\nimport { promiseMaker } from \"../../utils/promiseMaker\";\nimport { setTabIndex } from \"../../utils/setTabIndex\";\n\nexport type ContentProps = {\n   /** Please make sure to set it with the value of the Button component. */\n   value: string;\n   onOpen?: (target: Element) => void;\n   onClose?: (target: Element) => void;\n   /** callback if isAnimation is false when use useTabSwitch */\n   onReset?: (target: Element) => void;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nexport const Content = ({\n   children,\n   value,\n   onOpen,\n   onClose,\n   onReset,\n   style,\n   ...rest\n}: ContentProps) => {\n   if (value === \"\") {\n      throw new Error(\n         \"Please set the value to something other than an empty string.\"\n      );\n   }\n   const isInitialRender = useRef(true);\n   const ref = useRef<HTMLDivElement>(null);\n   const setTabState = useSetTabState();\n   const tabState = useTabState();\n   const isCurrent = tabState.current === value && !tabState.isLeaving;\n\n   useEffect(() => {\n      if (isInitialRender.current) {\n         isInitialRender.current = false;\n         return;\n      }\n\n      if (!tabState.isAnimation) {\n         if (isCurrent) {\n            onReset && onReset(ref.current!);\n         }\n         return;\n      }\n\n      if (tabState.prev === value) {\n         (async () => {\n            onClose && (await promiseMaker(onClose(ref.current!)));\n            setTabState((state) => {\n               return {\n                  ...state,\n                  isLeaving: false,\n                  prev: \"\",\n                  current: state.next,\n                  next: \"\",\n               };\n            });\n         })();\n      }\n\n      if (isCurrent) {\n         onOpen && onOpen(ref.current!);\n      }\n   }, [tabState, setTabState, onOpen, onClose, onReset, value, isCurrent]);\n\n   useEffect(() => {\n      setTabIndex({\n         content: ref.current!,\n         isOpen: tabState.current === value,\n      });\n   }, [tabState, value]);\n\n   return (\n      <div\n         ref={ref}\n         style={{\n            ...(tabState.current !== value\n               ? {\n                    pointerEvents: \"none\",\n                    position: \"absolute\",\n                    visibility: \"hidden\",\n                    opacity: 0,\n                    display: \"none\",\n                 }\n               : {}),\n            ...style,\n         }}\n         role=\"tabpanel\"\n         id={`tab-${value}`}\n         aria-hidden={tabState.current !== value}\n         {...rest}>\n         {children}\n      </div>\n   );\n};\n","import { useSetTabState } from \"./Context\";\n\n/**\n * This is a custom hook that is useful when you want to operate tabs other than Button components.\n * @returns (value: string, isAnimation: boolean)=> void\n * \n * ```jsx\n * const tabSwitch = Tab.useTabSwitch();\n   tabSwitch(\"tab\", true);\n\t```\n */\nexport const useTabSwitch = () => {\n   const setTabState = useSetTabState();\n   return (value: string, isAnimation: boolean) => {\n      setTabState((state) => {\n         return {\n            isAnimation: isAnimation,\n            isLeaving: isAnimation,\n            prev: isAnimation ? state.current : \"\",\n            current: isAnimation ? state.current : value,\n            next: isAnimation ? value : \"\",\n         };\n      });\n   };\n};\n","import {\n   Dispatch,\n   SetStateAction,\n   createContext,\n   useContext,\n   useState,\n} from \"react\";\n\ntype AccordionState = {\n   target: string;\n   toggle: boolean;\n   defaultValue: string[];\n};\n\nconst defaultState: AccordionState = {\n   target: \"\",\n   toggle: false,\n   defaultValue: [],\n};\n\nconst AccordionStateContext = createContext<AccordionState>(defaultState);\nconst setAccordionStateContext = createContext<\n   Dispatch<SetStateAction<AccordionState>>\n>(() => undefined);\n\nexport type ContextProps = {\n   children: React.ReactNode;\n   /** Please set the value that you want to open by default. */\n   defaultValue: string[];\n};\n\nexport const Context = ({ children, defaultValue }: ContextProps) => {\n   const [AccordionState, setAccordionState] = useState({\n      target: \"\",\n      toggle: false,\n      defaultValue: defaultValue,\n   });\n   return (\n      <AccordionStateContext.Provider value={AccordionState}>\n         <setAccordionStateContext.Provider value={setAccordionState}>\n            {children}\n         </setAccordionStateContext.Provider>\n      </AccordionStateContext.Provider>\n   );\n};\n\nexport const useAccordionState = () => useContext(AccordionStateContext);\nexport const useSetAccordionState = () => useContext(setAccordionStateContext);\n","import { useState } from \"react\";\nimport { useAccordionState, useSetAccordionState } from \"./Context\";\n\nexport type ButtonProps = {\n   /** Please make sure to set it with the value of the Content component. */\n   value: string;\n} & React.ButtonHTMLAttributes<HTMLButtonElement>;\n\nexport const Button = ({ children, value, ...rest }: ButtonProps) => {\n   if (value === \"\") {\n      throw new Error(\n         \"Please set the value to something other than an empty string.\"\n      );\n   }\n   const accordionState = useAccordionState();\n   const setAccordionState = useSetAccordionState();\n\n   const [isOpen, setIsOpen] = useState<boolean>(() =>\n      accordionState.defaultValue.find((val) => val === value) ? true : false\n   );\n   return (\n      <button\n         onClick={() => {\n            setAccordionState((state) => {\n               return {\n                  ...state,\n                  toggle: isOpen,\n                  target: value,\n               };\n            });\n            setIsOpen(!isOpen);\n         }}\n         aria-controls={`content-${value}`}\n         id={`button-${value}`}\n         aria-expanded={isOpen}\n         {...rest}>\n         {children}\n      </button>\n   );\n};\n","\"use client\";\n\nimport { useRef, useEffect } from \"react\";\n\ntype UseResizeObserverProps = {\n   target?: React.RefObject<Element> | Element;\n   onResize?: (entry: Element) => void;\n   /** default:100 */\n   debounce?: number;\n};\n\nexport const useResizeObserver = (\n   { target, onResize, debounce = 100 }: UseResizeObserverProps = {},\n   dependencies?: React.DependencyList\n) => {\n   const ref = useRef(null);\n   const timeoutID = useRef<NodeJS.Timeout | number>(0);\n   const isInitialRender = useRef(true);\n\n   useEffect(() => {\n      const _target =\n         target instanceof Element ? target : target?.current ?? ref.current;\n      if (!_target) return;\n\n      const resizeObserver = new ResizeObserver((entries) => {\n         clearTimeout(timeoutID.current);\n         timeoutID.current = setTimeout(() => {\n            if (isInitialRender.current) {\n               isInitialRender.current = false;\n               return;\n            }\n            onResize?.(entries[0].target);\n         }, debounce);\n      });\n      resizeObserver.observe(_target);\n      return () => {\n         resizeObserver.unobserve(_target);\n         clearTimeout(timeoutID.current);\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n   }, dependencies);\n\n   return ref;\n};\n","import { useEffect, useRef, useState } from \"react\";\nimport { useAccordionState } from \"./Context\";\nimport { useResizeObserver } from \"../../hooks/useResizeObserver\";\nimport { setTabIndex } from \"../../utils/setTabIndex\";\n\ntype ClickHandler = {\n   height: number;\n   target: HTMLDivElement;\n};\n\nexport type ContentProps = {\n   /** Please make sure to set it with the value of the Button component. */\n   value: string;\n   onOpen: (props: ClickHandler) => void;\n   onClose: (props: ClickHandler) => void;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nexport const Content = ({\n   value,\n   onOpen,\n   onClose,\n   children,\n   ...rest\n}: ContentProps) => {\n   if (value === \"\") {\n      throw new Error(\n         \"Please set the value to something other than an empty string.\"\n      );\n   }\n\n   const accordionState = useAccordionState();\n   const [isOpen, setIsOpen] = useState<boolean>(() =>\n      accordionState.defaultValue.find((val) => val === value) ? true : false\n   );\n   const isOpenDefault = useRef(isOpen);\n\n   useEffect(() => {\n      if (accordionState.target === value) {\n         setIsOpen(!isOpen);\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n   }, [accordionState.target, accordionState.toggle]);\n\n   const isFirst = useRef(true);\n   const wrapperRef = useRef<HTMLDivElement>(null);\n   const innerRef = useRef<HTMLDivElement>(null);\n\n   useEffect(() => {\n      if (isFirst.current) {\n         isFirst.current = false;\n         return;\n      }\n      const callbackProps = {\n         height: innerRef.current!.getBoundingClientRect().height,\n         target: wrapperRef.current!,\n      };\n\n      isOpen ? onOpen(callbackProps) : onClose(callbackProps);\n   }, [isOpen, onOpen, onClose]);\n\n   useEffect(() => {\n      setTabIndex({ content: wrapperRef.current!, isOpen });\n   }, [isOpen]);\n\n   useResizeObserver(\n      {\n         target: innerRef,\n         onResize: (entry) => {\n            const contentHeight = entry.getBoundingClientRect().height;\n            if (isOpen) {\n               wrapperRef.current!.style.height = `${contentHeight}px`;\n            }\n         },\n         debounce: 100,\n      },\n      [isOpen]\n   );\n\n   return (\n      <div\n         ref={wrapperRef}\n         style={{\n            overflow: \"hidden\",\n            height: isOpenDefault.current ? \"auto\" : \"0px\",\n         }}\n         id={`content-${value}`}\n         aria-labelledby={`button-${value}`}\n         aria-hidden={!isOpen}>\n         <div ref={innerRef} {...rest}>\n            {children}\n         </div>\n      </div>\n   );\n};\n","\"use client\";\n\nimport { useEffect, useRef, useState } from \"react\";\n\nexport type UseIntersectionObserverProps = {\n   target?: React.RefObject<Element> | Element;\n   options?: IntersectionObserverInit;\n   /** default : `false` */\n   once?: boolean;\n   onEnter?: (entry: IntersectionObserverEntry) => void;\n   onLeave?: (entry: IntersectionObserverEntry) => void;\n};\n\nexport const useIntersectionObserver = (\n   {\n      target,\n      options,\n      once = false,\n      onEnter,\n      onLeave,\n   }: UseIntersectionObserverProps = {},\n   dependencies?: React.DependencyList\n) => {\n   const ref = useRef(null);\n   const [isIntersecting, setIsIntersecting] = useState(false);\n\n   useEffect(() => {\n      const _target =\n         target instanceof Element ? target : target?.current ?? ref.current;\n      if (!_target) return;\n\n      const callbackEvent = (\n         entries: IntersectionObserverEntry[],\n         observer: IntersectionObserver\n      ) => {\n         entries.forEach((entry) => {\n            setIsIntersecting(entry.isIntersecting);\n            if (entry.isIntersecting) {\n               if (onEnter) onEnter(entry);\n               if (once) observer.unobserve(entry.target);\n            } else if (!entry.isIntersecting) {\n               if (onLeave) onLeave(entry);\n            }\n         });\n      };\n\n      const observer = new IntersectionObserver(callbackEvent, options);\n      observer.observe(_target);\n\n      return () => {\n         observer.unobserve(_target);\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n   }, dependencies);\n\n   return { ref, isIntersecting };\n};\n","\"use client\";\n\nimport { useEffect, useLayoutEffect } from \"react\";\n\nexport const useIsomorphicLayoutEffect =\n   typeof window !== \"undefined\" ? useLayoutEffect : useEffect;\n","\"use client\";\n\nimport gsap from \"gsap\";\nimport { useIsomorphicLayoutEffect } from \"../useIsomorphicLayoutEffect\";\nimport { useRef } from \"react\";\n\n/**\n * Reference to r3f's useMutableCallback\n */\nfunction useMutableCallback<T>(fn: T) {\n   const ref = useRef<T>(fn);\n   useIsomorphicLayoutEffect(() => void (ref.current = fn), [fn]);\n   return ref;\n}\n\n/**\n * Add callbacks to `gsap.ticker`. Automatically `remove` on unmounting.\n */\nexport const useFrame = (\n   callback: gsap.TickerCallback,\n   once?: boolean | undefined,\n   prioritize?: boolean | undefined\n) => {\n   const ref = useMutableCallback(callback);\n   useIsomorphicLayoutEffect(() => {\n      const ticker: gsap.TickerCallback = (...args) => ref.current(...args);\n      gsap.ticker.add(ticker, once, prioritize);\n      return () => gsap.ticker.remove(ticker);\n   }, [once, prioritize]);\n};\n","\"use client\";\n\nimport { forwardRef, useRef } from \"react\";\nimport gsap from \"gsap\";\nimport { useIntersectionObserver } from \"../../hooks/useIntersectionObserver\";\nimport { useFrame } from \"../../hooks/useFrame\";\n\nexport type InfinityLoopProps = {\n   active?: boolean;\n   /** Negative values will result in the opposite direction. default : `1` */\n   speed?: number;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nexport const InfinityLoop = forwardRef<HTMLDivElement, InfinityLoopProps>(\n   ({ active = false, speed = 1, children, ...rest }, ref) => {\n      const wrapperRef = useRef<HTMLDivElement>(null);\n      const firstChildRef = useRef<HTMLDivElement>(null);\n      const secondChildRef = useRef<HTMLDivElement>(null);\n\n      const progress = useRef(0);\n\n      useFrame(() => {\n         if (!active) {\n            return;\n         }\n\n         const wrapper = wrapperRef.current;\n         const firstChild = firstChildRef.current;\n         const secondChild = secondChildRef.current;\n\n         if (!(wrapper && firstChild && secondChild)) {\n            return;\n         }\n\n         const delta = gsap.ticker.deltaRatio() / 1000;\n         const ratio = wrapper.clientWidth / firstChild.clientWidth;\n         progress.current += delta * Math.abs(speed) * ratio;\n\n         if (progress.current >= 1) {\n            progress.current = 0;\n         }\n\n         if (speed < 0) {\n            const _progress = progress.current * -100;\n            firstChild.style.transform = `translateX(${_progress}%)`;\n            secondChild.style.transform = `translateX(${_progress}%)`;\n         } else {\n            const _progress = progress.current * 100;\n            firstChild.style.transform = `translateX(${_progress}%)`;\n            secondChild.style.transform = `translateX(${_progress - 200}%)`;\n         }\n      });\n\n      return (\n         <div ref={ref} {...rest}>\n            <div\n               ref={wrapperRef}\n               style={{\n                  overflow: \"hidden\",\n                  width: \"100%\",\n               }}>\n               <div\n                  style={{\n                     whiteSpace: \"nowrap\",\n                     display: \"flex\",\n                  }}>\n                  <div ref={firstChildRef}>{children}</div>\n                  <div ref={secondChildRef}>{children}</div>\n               </div>\n            </div>\n         </div>\n      );\n   }\n);\nInfinityLoop.displayName = \"InfinityLoop\";\n\nexport const InfinityLoopOnView = (\n   props: Omit<InfinityLoopProps, \"active\">\n) => {\n   const { isIntersecting, ref } = useIntersectionObserver({\n      once: false,\n   });\n   return <InfinityLoop ref={ref} {...props} active={isIntersecting} />;\n};\n","import { useMemo } from \"react\";\n\ntype CustomBreakLineParserProps = {\n   children: string;\n};\n\nexport const CustomBreakLineUtils = {\n   regex: /(\\n|###br\\.[^#]+###|###br###)/,\n   isRegularBreak: (line: string) => line === \"\\n\" || line === \"###br###\",\n   isSpecificBreak: (line: string) => line.match(/###br\\.(.*?)###/),\n   getClassName: (line: string) =>\n      line.match(/(?<=###br\\.).+?(?=###)/)?.[0] || \"\",\n};\n\n/**\n * @returns {(string | JSX.Element)[]} - A React fragment containing the formatted string with line breaks represented as `<br>` elements.\n */\nconst useParsedBreakLine = (string: string): (string | JSX.Element)[] =>\n   useMemo(\n      () =>\n         string.split(CustomBreakLineUtils.regex).map((line, index) => {\n            // \\n or ###br### is a regular line break\n            if (CustomBreakLineUtils.isRegularBreak(line)) {\n               return <br key={index} />;\n            }\n            // ###br.className### is a line break with a specified class name\n            if (CustomBreakLineUtils.isSpecificBreak(line)) {\n               return (\n                  <br\n                     className={CustomBreakLineUtils.getClassName(line)}\n                     key={index}\n                  />\n               );\n            }\n            // Regular text\n            return line;\n         }),\n      [string]\n   );\n\n/**\n * Converts specific markers in a string into HTML line breaks for React components.\n * @param {string} children - The input string to be parsed and formatted. Use `\\n` or `###br###` for regular line breaks, and `###br.className###` for a line break with a specific class.\n * @returns {React.ReactElement} - The formatted string\n */\nconst CustomBreakLineParser = ({\n   children,\n}: CustomBreakLineParserProps): React.ReactElement => {\n   const parsedText = useParsedBreakLine(children);\n   return <>{parsedText}</>;\n};\n\nexport { useParsedBreakLine, CustomBreakLineParser };\n","import { useMemo } from \"react\";\nimport { CustomBreakLineUtils } from \"../CustomBreakLineParser\";\n\ntype SpanOmittedChildren = Omit<\n   React.HTMLAttributes<HTMLSpanElement>,\n   \"children\"\n>;\n\nexport type SplitTextProps = {\n   /** Split by character or by word . For `words`, split by whitespace. */\n   type?: \"chars\" | \"words\";\n   /** It is possible to set exceptional attributes for certain characters only */\n   exception?: {\n      selector: string;\n      attributes?: SpanOmittedChildren;\n   }[];\n   containerProps?: SpanOmittedChildren;\n   children: string;\n} & SpanOmittedChildren;\n\nconst SplitContainer = ({\n   containerProps,\n   ...props\n}: {\n   containerProps?: SpanOmittedChildren;\n} & React.HTMLAttributes<HTMLSpanElement>) => {\n   if (containerProps) {\n      return (\n         <span {...containerProps}>\n            <span {...props} />\n         </span>\n      );\n   }\n   return <span {...props} />;\n};\n\n/**\n * @param children - The input string to be parsed and formatted. Use `\\n` or `###br###` for regular line breaks, and `###br.className###` for a line break with a specific class.\n */\nexport const SplitText = ({\n   type = \"chars\",\n   children,\n   exception,\n   containerProps,\n   ...rest\n}: SplitTextProps) => {\n   const splitTag = type === \"chars\" ? \"\" : \" \";\n\n   const wrappedText = useMemo(\n      () =>\n         children.split(CustomBreakLineUtils.regex).flatMap((line, i) => {\n            if (CustomBreakLineUtils.isRegularBreak(line)) {\n               return [null, <br key={i} />];\n            }\n            if (CustomBreakLineUtils.isSpecificBreak(line)) {\n               return [\n                  null,\n                  <br\n                     key={i}\n                     className={CustomBreakLineUtils.getClassName(line)}\n                  />,\n               ];\n            }\n            return [\n               ...line.split(splitTag).map((char, charI) => {\n                  if (exception) {\n                     const match = exception.find(\n                        (item) => item.selector === char\n                     );\n                     if (match) {\n                        return (\n                           <SplitContainer\n                              key={`${i}-${charI}`}\n                              containerProps={containerProps}\n                              {...rest}\n                              {...match.attributes}>\n                              {char}\n                           </SplitContainer>\n                        );\n                     }\n                  }\n                  return (\n                     <SplitContainer\n                        key={`${i}-${charI}`}\n                        containerProps={containerProps}\n                        {...rest}>\n                        {char === \" \" ? \"\\u00A0\" : char}\n                     </SplitContainer>\n                  );\n               }),\n               null,\n            ];\n         }),\n      [splitTag, children, rest, exception, containerProps]\n   );\n\n   return wrappedText;\n};\n","import { VideoHTMLAttributes, forwardRef } from \"react\";\n\nexport interface VideoProps extends VideoHTMLAttributes<HTMLVideoElement> {\n   fill?: boolean;\n}\n\nexport const Video = forwardRef<HTMLVideoElement, VideoProps>((props, ref) => {\n   const { fill, style, ...rest } = props;\n   return (\n      <video\n         ref={ref}\n         style={\n            fill\n               ? {\n                    ...{\n                       position: \"absolute\",\n                       width: \"100%\",\n                       height: \"100%\",\n                       inset: 0,\n                       color: \"transparent\",\n                    },\n                    ...style,\n                 }\n               : style\n         }\n         {...rest}></video>\n   );\n});\n\nVideo.displayName = \"Video\";\n","\"use client\";\n\nimport { forwardRef, useEffect, useState } from \"react\";\n\nexport type LoaderProps = {\n   loader?: \"skeleton\" | \"circular\" | React.ReactNode;\n   /** 1000ms */\n   delay?: number;\n   onView?: {\n      /** 0.3s */\n      transitionDuration?: React.CSSProperties[\"transitionDuration\"];\n      /** ease-in-out */\n      transitionTimingFunction?: React.CSSProperties[\"transitionTimingFunction\"];\n   };\n   skeleton?: {\n      /** rgba(255,255,255,0.64) */\n      waveColor?: string;\n      /** 1.6s */\n      animationDuration?: React.CSSProperties[\"animationDuration\"];\n      /** ease-in-out */\n      animationTimingFunction?: React.CSSProperties[\"animationTimingFunction\"];\n   };\n   circular?: {\n      /** 24px */\n      width?: React.CSSProperties[\"width\"];\n      /** 24px */\n      height?: React.CSSProperties[\"height\"];\n      /** 2px solid #fff */\n      border?: React.CSSProperties[\"border\"];\n      /** 1.6s */\n      animationDuration?: React.CSSProperties[\"animationDuration\"];\n      /** linear */\n      animationTimingFunction?: React.CSSProperties[\"animationTimingFunction\"];\n   };\n} & React.HTMLAttributes<HTMLDivElement>;\n\nexport const Loader = forwardRef<HTMLDivElement, LoaderProps>(\n   (\n      {\n         loader = \"skeleton\",\n         delay = 1000,\n         onView,\n         skeleton,\n         circular,\n         children,\n         style,\n         ...rest\n      },\n      ref\n   ) => {\n      const [isView, setIsView] = useState(delay === 0);\n      const hasChildren = Boolean(children);\n      useEffect(() => {\n         if (delay === 0) return;\n         setTimeout(() => setIsView(true), delay);\n      }, [delay]);\n      return (\n         <div\n            ref={ref}\n            style={{\n               ...{\n                  overflow: \"hidden\",\n                  pointerEvents: \"none\",\n               },\n               ...(hasChildren\n                  ? {\n                       maxWidth: \"fit-content\",\n                       height: \"auto\",\n                    }\n                  : {}),\n               ...style,\n            }}\n            {...rest}>\n            <div\n               style={{\n                  ...{\n                     position: \"relative\",\n                     width: \"100%\",\n                     height: \"100%\",\n                     opacity: 0,\n                  },\n                  ...(isView\n                     ? {\n                          opacity: 1,\n                          transitionProperty: \"opacity\",\n                          transitionDuration:\n                             onView?.transitionDuration || \"0.3s\",\n                          transitionTimingFunction:\n                             onView?.transitionTimingFunction || \"ease-in-out\",\n                       }\n                     : {}),\n               }}>\n               {loader === \"skeleton\" ? (\n                  <div\n                     style={{\n                        background: `linear-gradient(90deg,transparent,${\n                           skeleton?.waveColor || \"rgba(255,255,255,0.64)\"\n                        },transparent)`,\n                        animationDuration:\n                           skeleton?.animationDuration || \"1.6s\",\n                        animationTimingFunction:\n                           skeleton?.animationTimingFunction || \"ease-in-out\",\n                        position: \"absolute\",\n                        width: \"100%\",\n                        height: \"100%\",\n                        top: 0,\n                        left: 0,\n                        animationName: \"skeleton\",\n                        animationIterationCount: \"infinite\",\n                     }}>\n                     <style>\n                        {`@keyframes skeleton {0% {transform: translateX(-100%);}100% {transform: translateX(100%);}}`}\n                     </style>\n                  </div>\n               ) : loader === \"circular\" ? (\n                  <div\n                     style={{\n                        width: circular?.width ? circular?.width : \"24px\",\n                        height: circular?.height ? circular?.height : \"24px\",\n                        border: circular?.border || \"2px solid #fff\",\n                        borderBottomColor: \"transparent\",\n                        animationDuration:\n                           skeleton?.animationDuration || \"1.6s\",\n                        animationTimingFunction:\n                           skeleton?.animationTimingFunction || \"linear\",\n                        position: \"absolute\",\n                        top: 0,\n                        bottom: 0,\n                        left: 0,\n                        right: 0,\n                        margin: \"auto\",\n                        borderRadius: \"50%\",\n                        animationName: \"circular\",\n                        animationIterationCount: \"infinite\",\n                     }}>\n                     <style>\n                        {`@keyframes circular {0% {transform: rotate(0deg);}100% {transform: rotate(360deg);}}`}\n                     </style>\n                  </div>\n               ) : (\n                  loader\n               )}\n               {hasChildren && (\n                  <div style={{ visibility: \"hidden\" }}>{children}</div>\n               )}\n            </div>\n         </div>\n      );\n   }\n);\n\nLoader.displayName = \"Loader\";\n","\"use client\";\n\nimport { useDeviceDetector } from \"../../client\";\nimport { useIsomorphicLayoutEffect } from \"../../hooks/useIsomorphicLayoutEffect\";\nimport { createContext, useContext, useRef, useState } from \"react\";\n\nconst StableScrollerContext = createContext<HTMLDivElement | undefined>(\n   undefined\n);\n\nexport const useStableScroller = () => useContext(StableScrollerContext);\n\n/**\n * @param active - If the scroller should be active or not\n * - Components to stabilise the behaviour of the scroller in mobile browsers.\n * - based on the `isMobile` on `useDeviceDetector`\n * - It is possible to use `useStableScroller` to get the `HTMLDivElement` if it is in context\n */\nexport const StableScroller = ({\n   active = true,\n   style,\n   ...rest\n}: { active?: boolean } & React.HTMLAttributes<HTMLDivElement>) => {\n   const ref = useRef<HTMLDivElement>(null);\n\n   const { isMobile } = useDeviceDetector();\n   const isActive = active && isMobile;\n\n   const [scroller, setScroller] = useState<HTMLDivElement | undefined>(\n      undefined\n   );\n\n   useIsomorphicLayoutEffect(() => {\n      if (isActive && ref.current) {\n         setScroller(ref.current);\n      } else {\n         setScroller(undefined);\n      }\n   }, [isActive]);\n\n   return (\n      <StableScrollerContext.Provider value={scroller}>\n         <div\n            ref={ref}\n            style={{\n               ...(isActive\n                  ? {\n                       height: \"100svh\",\n                       overflowY: \"auto\",\n                    }\n                  : {}),\n               ...style,\n            }}\n            {...rest}\n         />\n      </StableScrollerContext.Provider>\n   );\n};\n","\"use client\";\n\nimport { useRef, useEffect, useCallback } from \"react\";\n\ntype UseWindowResizeObserverProps = {\n   onResize: ({\n      winW,\n      winH,\n      initWinW,\n   }: {\n      winW: number;\n      winH: number;\n      initWinW: number;\n   }) => void;\n   /** default:100 */\n   debounce?: number;\n   dependencies?: any[];\n};\n\nexport const useWindowResizeObserver = ({\n   onResize,\n   debounce = 100,\n   dependencies = [],\n}: UseWindowResizeObserverProps) => {\n   const initialWidth = useRef(0);\n   const timeoutID = useRef<NodeJS.Timeout | number>(0);\n\n   const callbackEvent = useCallback(() => {\n      clearTimeout(timeoutID.current);\n      timeoutID.current = setTimeout(() => {\n         onResize({\n            winW: window.innerWidth,\n            winH: window.innerHeight,\n            initWinW: initialWidth.current,\n         });\n      }, debounce);\n   }, [onResize, debounce]);\n\n   useEffect(() => {\n      initialWidth.current = window.innerWidth;\n      window.addEventListener(\"resize\", callbackEvent);\n      return () => {\n         window.removeEventListener(\"resize\", callbackEvent);\n         clearTimeout(timeoutID.current);\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n   }, dependencies);\n};\n","const funtechLog = `\nCreated by FunTech with 😘\n\n👉 https://funtech.inc/\n👉 https://github.com/FunTechInc\n\n`;\n\nexport const funtechConsole = (customLog: string | true) => {\n   let log = funtechLog;\n   if (typeof customLog === \"string\") {\n      log += customLog;\n   }\n   console.log(log);\n};\n","export const fixViewportForSmall = (winW: number) => {\n   const viewport = document.querySelector('meta[name=\"viewport\"]');\n   if (!viewport) {\n      return;\n   }\n   const value =\n      winW > 360 ? \"width=device-width,initial-scale=1\" : \"width=360\";\n   if (viewport.getAttribute(\"content\") !== value) {\n      viewport.setAttribute(\"content\", value);\n   }\n};\n","\"use client\";\n\nimport { useCallback, useEffect } from \"react\";\nimport { useWindowResizeObserver } from \"../useWindowResizeObserver\";\nimport { funtechConsole } from \"./utils/funtech\";\nimport { fixViewportForSmall } from \"./utils/fixViewportForSmall\";\n\ntype UseStarterProps = {\n   /** If set to true, `width=360` will be set in `meta[name=\"viewport\"]` , default : `true` */\n   isFixViewportForSmall?: boolean;\n   /** If a string is set, it is concatenated with the default string. default : `false` */\n   areYouFun?: boolean | string;\n};\n\n/**\n * When page rendering is complete, data-set `spice-rendered` to the body tag.\n */\nexport const useStarter = ({\n   isFixViewportForSmall = true,\n   areYouFun = false,\n}: UseStarterProps = {}) => {\n   const handleFixViewportForSmall = useCallback(\n      (winW: number) => {\n         if (isFixViewportForSmall) {\n            fixViewportForSmall(winW);\n         }\n      },\n      [isFixViewportForSmall]\n   );\n\n   useWindowResizeObserver({\n      onResize: ({ winW }) => handleFixViewportForSmall(winW),\n      debounce: 100,\n      dependencies: [],\n   });\n\n   useEffect(() => {\n      document.body.dataset.spiceRendered = \"true\";\n      handleFixViewportForSmall(window.innerWidth);\n      if (areYouFun && process.env.NODE_ENV !== \"development\") {\n         funtechConsole(areYouFun);\n      }\n   }, [areYouFun, handleFixViewportForSmall]);\n};\n","\"use client\";\n\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useWindowResizeObserver } from \"../useWindowResizeObserver\";\n\n/**\n * @description It determines whether the device is a touch device or not. When the determination switches, the state is updated.\n */\nexport const useIsTouchDevice = () => {\n   const [isTouchDevice, setIsTouchDevice] = useState<boolean | null>(null);\n\n   const updateState = useCallback(() => {\n      const touchEvent = window.ontouchstart;\n      const touchPoints = navigator.maxTouchPoints;\n      if (touchEvent !== undefined && 0 < touchPoints) {\n         setIsTouchDevice(true);\n      } else {\n         setIsTouchDevice(false);\n      }\n   }, []);\n\n   useWindowResizeObserver({\n      onResize: () => updateState(),\n      debounce: 100,\n      dependencies: [],\n   });\n\n   useEffect(() => updateState(), [updateState]);\n\n   return isTouchDevice;\n};\n","\"use client\";\n\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useWindowResizeObserver } from \"../useWindowResizeObserver\";\n\nexport const useMediaQuery = (\n   mediaQueryType: \"max\" | \"min\",\n   breakpoint: number\n) => {\n   const [isRange, setIsRange] = useState<boolean | null>(null);\n\n   const updateIsRange = useCallback(\n      (currentWidth: number) => {\n         switch (mediaQueryType) {\n            case \"max\":\n               setIsRange(breakpoint >= currentWidth);\n               break;\n            case \"min\":\n               setIsRange(breakpoint <= currentWidth);\n               break;\n            default:\n               break;\n         }\n      },\n      [mediaQueryType, breakpoint]\n   );\n\n   useWindowResizeObserver({\n      onResize: ({ winW }) => updateIsRange(winW),\n      debounce: 100,\n      dependencies: [updateIsRange],\n   });\n\n   useEffect(() => updateIsRange(window.innerWidth), [updateIsRange]);\n\n   return isRange;\n};\n","\"use client\";\n\nimport { useMemo, useState } from \"react\";\n\ntype UseShareProps = {\n   shareUrl: string;\n   /** window.navigator.share API seems to automatically insert siteorigin, so just pass the path */\n   sharePath?: string;\n   shareTitle?: string;\n   /** size of new window , default:600 */\n   width?: number;\n   /** size of new window , default:800 */\n   height?: number;\n};\n\nexport const useShare = ({\n   shareUrl,\n   sharePath,\n   shareTitle = \"\",\n   width = 600,\n   height = 800,\n}: UseShareProps) => {\n   const encodedUrl = useMemo(() => encodeURIComponent(shareUrl), [shareUrl]);\n   const windowSize = useMemo(\n      () => `height=${height},width=${width}`,\n      [height, width]\n   );\n\n   const Facebook = useMemo(\n      () => ({\n         onClick: () => {\n            window.open(\n               `https://www.facebook.com/sharer.php?u=${encodedUrl}&t=${shareTitle}`,\n               \"newwindow\",\n               windowSize\n            );\n         },\n      }),\n      [encodedUrl, shareTitle, windowSize]\n   );\n\n   const X = useMemo(\n      () => ({\n         onClick: () => {\n            window.open(\n               `https:////twitter.com/share?url=${encodedUrl}&text=${shareTitle}`,\n               \"newwindow\",\n               windowSize\n            );\n         },\n      }),\n      [encodedUrl, windowSize, shareTitle]\n   );\n\n   const LINE = useMemo(\n      () => ({\n         onClick: () => {\n            window.open(\n               `https://social-plugins.line.me/lineit/share?url=${encodedUrl}&text=${shareTitle}`,\n               \"newwindow\",\n               windowSize\n            );\n         },\n      }),\n      [encodedUrl, windowSize, shareTitle]\n   );\n\n   const share = useMemo(\n      () => ({\n         onClick: async () => {\n            if (!navigator.share) {\n               alert(\"このブラウザは共有機能に対応していません。\");\n               return;\n            }\n            try {\n               await window.navigator.share({\n                  title: shareTitle,\n                  url: sharePath ? sharePath : encodedUrl,\n               });\n            } catch (e) {\n               return;\n            }\n         },\n      }),\n      [shareTitle, encodedUrl, sharePath]\n   );\n\n   const [isCopied, setIsCopied] = useState(false);\n   const copy = useMemo(\n      () => ({\n         onClick: () => {\n            navigator.clipboard.writeText(shareUrl).then(() => {\n               setIsCopied(true);\n            });\n         },\n      }),\n      [shareUrl]\n   );\n\n   return {\n      Facebook,\n      X,\n      LINE,\n      share,\n      copy,\n      isCopied,\n   };\n};\n","\"use client\";\n\nimport { useState } from \"react\";\nimport { useIsomorphicLayoutEffect } from \"../useIsomorphicLayoutEffect\";\n\ntype mobileOSType = \"iOS\" | \"Android\" | undefined;\ntype RenderingEngine =\n   | \"Gecko\"\n   | \"WebKit\"\n   | \"Presto\"\n   | \"Trident\"\n   | \"EdgeHTML\"\n   | \"Blink\"\n   | undefined;\n\nconst detectMobileOS = (ua: string): mobileOSType => {\n   if (/\\b(iPad|iPhone|iPod)\\b/.test(ua)) return \"iOS\";\n   if (/\\bAndroid\\b/i.test(ua)) return \"Android\";\n   return undefined;\n};\n\nconst detectRenderingEngine = (ua: string): RenderingEngine => {\n   if (/Gecko\\/\\d+/i.test(ua) && !/like Gecko/i.test(ua)) return \"Gecko\";\n   if (/AppleWebKit\\/\\d+/i.test(ua) && /like Gecko/i.test(ua)) return \"WebKit\";\n   if (/Opera\\/\\d+/i.test(ua)) return \"Presto\";\n   if (/Trident\\/\\d+/i.test(ua)) return \"Trident\";\n   if (/Edge\\/\\d+/i.test(ua)) return \"EdgeHTML\";\n   if (/Chrome\\/\\d+/i.test(ua)) return \"Blink\";\n   return undefined;\n};\n\ntype DeviceState = {\n   /** `iOS` | `Android` | `undefined` */\n   mobileOS: mobileOSType;\n   /** returns the result of `/Mobi/.test(ua)` */\n   isMobile: boolean | undefined;\n   /** `Gecko` | `WebKit` | `Presto` | `Trident` | `EdgeHTML` | `Blink` | `undefined` */\n   renderingEngine: RenderingEngine;\n   userAgent: string;\n   /** Result of executing the testing function for the argument */\n   testing: boolean | undefined;\n};\n\nexport const useDeviceDetector = (\n   testing?: (userAgent: string) => boolean\n): DeviceState => {\n   const [deviceState, setDeviceState] = useState<DeviceState>({\n      mobileOS: undefined,\n      isMobile: undefined,\n      renderingEngine: undefined,\n      userAgent: \"\",\n      testing: undefined,\n   });\n\n   useIsomorphicLayoutEffect(() => {\n      const ua = navigator.userAgent;\n      const mobileOS = detectMobileOS(ua);\n      const renderingEngine = detectRenderingEngine(ua);\n\n      setDeviceState({\n         mobileOS,\n         isMobile: /Mobi/.test(ua),\n         renderingEngine,\n         userAgent: ua,\n         testing: testing && testing(ua),\n      });\n   }, []);\n\n   return deviceState;\n};\n","\"use client\";\n\nimport { useCallback, useRef, useState } from \"react\";\nimport { useFrame } from \"../useFrame\";\n\nexport const useOnHovering = (\n   onHovering: React.PointerEventHandler\n): {\n   onPointerEnter: React.PointerEventHandler;\n   onPointerLeave: React.PointerEventHandler;\n   onPointerMove: React.PointerEventHandler;\n} => {\n   const [isHovering, setIsHovering] = useState(false);\n   const pointerEvent = useRef<React.PointerEvent>();\n\n   useFrame(() => {\n      if (isHovering && pointerEvent.current) {\n         onHovering(pointerEvent.current);\n      }\n   });\n\n   const onPointerEnter = useCallback((e: React.PointerEvent) => {\n      pointerEvent.current = e;\n      setIsHovering(true);\n   }, []);\n   const onPointerLeave = useCallback(() => {\n      pointerEvent.current = undefined;\n      setIsHovering(false);\n   }, []);\n   const onPointerMove = useCallback((e: React.PointerEvent) => {\n      pointerEvent.current = e;\n   }, []);\n\n   return {\n      onPointerEnter,\n      onPointerLeave,\n      onPointerMove,\n   };\n};\n","\"use client\";\n\nimport { useState, useEffect } from \"react\";\n\n/**\n * When passing a reference to a parent component's Element to a child component, it cannot be referenced by the child component's `useLayoutEffect` due to the rendering order. The `useGSAP` uses `useLayoutEffect` and therefore gets the reference with `useValidElement`.\n */\nexport const useValidElement = <T extends Element>(\n   ref?: React.RefObject<T>\n) => {\n   const [element, setElement] = useState<T | undefined>();\n\n   useEffect(() => {\n      if (!ref) return;\n      if (ref.current) setElement(ref.current);\n   }, [ref]);\n\n   return element;\n};\n","\"use client\";\n\nimport gsap from \"gsap\";\nimport ScrollTrigger from \"gsap/ScrollTrigger\";\nimport { useCallback, useRef, useState } from \"react\";\nimport { useIsomorphicLayoutEffect } from \"../useIsomorphicLayoutEffect\";\n\ntype ReactiveState = \"isActive\" | \"direction\";\n\nconst isReactive = (frag: ReactiveState[] | undefined, key: ReactiveState) =>\n   Boolean(frag?.includes(key));\n\nexport const useScrollTrigger = (\n   vars: ScrollTrigger.StaticVars,\n   {\n      reactive = [],\n      dependencies = [],\n   }: {\n      reactive?: ReactiveState[];\n      dependencies?: React.DependencyList;\n   } = {}\n) => {\n   const [isActive, setIsActive] = useState(false);\n   const [direction, setDirection] = useState<number | false>(false);\n\n   const scrollTrigger = useRef<globalThis.ScrollTrigger>();\n\n   const lerpP = useRef<number | null>(null);\n   const lerpProgress = useCallback(\n      (alpha: number, precision: number = 4, threshold: number = 1e-3) => {\n         if (!scrollTrigger.current) return 0;\n\n         precision = Math.max(precision, 0);\n\n         const { progress } = scrollTrigger.current;\n         if (lerpP.current === null) lerpP.current = progress;\n\n         lerpP.current = gsap.utils.interpolate(lerpP.current, progress, alpha);\n\n         const factor = Math.pow(10, precision);\n         lerpP.current = Math.round(lerpP.current * factor) / factor;\n\n         if (lerpP.current < threshold) return 0;\n         if (1 - lerpP.current < threshold) return 1;\n\n         return lerpP.current;\n      },\n      []\n   );\n\n   useIsomorphicLayoutEffect(() => {\n      const { onUpdate, onToggle, trigger, ...rest } = vars;\n      if (!trigger) return;\n      gsap.registerPlugin(ScrollTrigger);\n      const _scrollTrigger = ScrollTrigger.create({\n         ...rest,\n         trigger,\n         onToggle: (self) => {\n            onToggle?.(self);\n            if (isReactive(reactive, \"isActive\")) setIsActive(self.isActive);\n         },\n         onUpdate: (self) => {\n            scrollTrigger.current = self;\n            onUpdate?.(self);\n            if (isReactive(reactive, \"direction\")) setDirection(self.direction);\n         },\n      });\n      return () => _scrollTrigger.kill();\n   }, dependencies);\n\n   return {\n      isActive,\n      direction,\n      lerpProgress,\n      scrollTrigger,\n   };\n};\n"],"names":["Input","formProps","style","rest","jsx","Select","isSelect","DefaultValue","defaultValue","getSelectedIndex","i","jsxs","option","RADIO_CHECKBOX_STYLE","FieldLayout","layoutType","formPropsArr","label","FormItem","errors","ErrorMessage","index","Fragment","Options","id","value","optionLabel","Textarea","isTextarea","FormField","type","propsLength","promiseMaker","callbackResult","resolve","DIALOG_STYLE","MODAL_CLASSNAME","getPaddingRight","getScrollbarWidth","toggleScrollLock","lock","paddingRight","scrollbarWidth","htmlRootStyle","bodyStyle","adjustedPaddingRight","ModalButton","forwardRef","dialog","onOpen","onClose","focusTarget","scrollLock","ref","dialogRef","useRef","styleStore","showModal","useCallback","_a","_c","_b","closeModal","useEffect","closeBtn","element","keyDownHandler","event","e","defaultState","tabStateContext","createContext","setTabStateContext","Context","children","tabState","setTabState","useState","useTabState","useContext","useSetTabState","Button","clickHandler","state","setTabIndex","content","isOpen","clickableElms","tabIndex","Content","onReset","isInitialRender","isCurrent","useTabSwitch","isAnimation","AccordionStateContext","setAccordionStateContext","AccordionState","setAccordionState","useAccordionState","useSetAccordionState","accordionState","setIsOpen","val","useResizeObserver","target","onResize","debounce","dependencies","timeoutID","_target","resizeObserver","entries","isOpenDefault","isFirst","wrapperRef","innerRef","callbackProps","entry","contentHeight","useIntersectionObserver","options","once","onEnter","onLeave","isIntersecting","setIsIntersecting","callbackEvent","observer","useIsomorphicLayoutEffect","useLayoutEffect","useMutableCallback","fn","useFrame","callback","prioritize","ticker","args","gsap","InfinityLoop","active","speed","firstChildRef","secondChildRef","progress","wrapper","firstChild","secondChild","delta","ratio","_progress","InfinityLoopOnView","props","CustomBreakLineUtils","line","useParsedBreakLine","string","useMemo","CustomBreakLineParser","parsedText","SplitContainer","containerProps","SplitText","exception","splitTag","char","charI","match","item","Video","fill","Loader","loader","delay","onView","skeleton","circular","isView","setIsView","hasChildren","StableScrollerContext","useStableScroller","StableScroller","isMobile","useDeviceDetector","isActive","scroller","setScroller","useWindowResizeObserver","initialWidth","funtechLog","funtechConsole","customLog","log","fixViewportForSmall","winW","viewport","useStarter","isFixViewportForSmall","areYouFun","handleFixViewportForSmall","useIsTouchDevice","isTouchDevice","setIsTouchDevice","updateState","touchEvent","touchPoints","useMediaQuery","mediaQueryType","breakpoint","isRange","setIsRange","updateIsRange","currentWidth","useShare","shareUrl","sharePath","shareTitle","width","height","encodedUrl","windowSize","Facebook","X","LINE","share","isCopied","setIsCopied","copy","detectMobileOS","ua","detectRenderingEngine","testing","deviceState","setDeviceState","mobileOS","renderingEngine","useOnHovering","onHovering","isHovering","setIsHovering","pointerEvent","onPointerEnter","onPointerLeave","onPointerMove","useValidElement","setElement","isReactive","frag","key","useScrollTrigger","vars","reactive","setIsActive","direction","setDirection","scrollTrigger","lerpP","lerpProgress","alpha","precision","threshold","factor","onUpdate","onToggle","trigger","ScrollTrigger","_scrollTrigger","self"],"mappings":"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"}