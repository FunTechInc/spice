{"version":3,"file":"spice.js","sources":["../../src/components/FormField/components/item/Input.tsx","../../src/components/FormField/components/item/Select.tsx","../../src/components/FormField/components/FieldLayout.tsx","../../src/components/FormField/components/item/Textarea.tsx","../../src/components/FormField/index.tsx","../../src/components/CustomBreakLineParser/index.tsx","../../src/components/SplitText/index.tsx","../../src/components/Video/index.tsx","../../src/utils/paging.ts","../../src/utils/Easings.ts"],"sourcesContent":["import { FormProps } from \"../..\";\n\nexport const Input = ({ formProps }: { formProps: FormProps }) => {\n   const { style, ...rest } = formProps;\n   return (\n      <input\n         {...rest}\n         style={{\n            overflow: \"hidden\",\n            ...style,\n         }}\n      />\n   );\n};\n","import { SelectProps } from \"../..\";\n\nexport const Select = ({ formProps }: { formProps: SelectProps }) => {\n   const { isSelect, style, ...rest } = formProps;\n   if (!isSelect) return null;\n   const { defaultSelectedIndex, options } = isSelect;\n\n   return (\n      <select\n         {...rest}\n         style={{\n            overflow: \"hidden\",\n            fontSize: \"16px\",\n            ...(style || {}),\n         }}\n         defaultValue={defaultSelectedIndex && options[defaultSelectedIndex]}>\n         {options.map((option, i) => (\n            <option key={i} value={option}>\n               {option}\n            </option>\n         ))}\n      </select>\n   );\n};\n","import { FormProps } from \"..\";\n\nexport type FormItem = React.FC<{\n   formProps: FormProps;\n}>;\n\ntype FieldLayoutProps = {\n   layoutType: \"block\" | \"flex\" | \"radio-check\";\n   formPropsArr: FormProps[];\n   label?: string | React.ReactNode;\n   FormItem: FormItem;\n   errors?: React.ReactNode[] | React.ReactNode;\n};\n\nconst RADIO_CHECKBOX_STYLE = {\n   position: \"absolute\",\n   whiteSpace: \"nowrap\",\n   width: \"1px\",\n   height: \"1px\",\n   overflow: \"hidden\",\n   border: \"0\",\n   padding: 0,\n   clip: \"rect(0 0 0 0)\",\n   clipPath: \"inset(50%)\",\n   zIndex: \"-99999\",\n} as React.CSSProperties;\n\nexport const FieldLayout = ({\n   layoutType,\n   formPropsArr,\n   label,\n   FormItem,\n   errors,\n}: FieldLayoutProps) => {\n   const ErrorMessage = ({ index }: { index: number }) => {\n      if (!errors) {\n         return null;\n      }\n      if (Array.isArray(errors)) {\n         return errors[index];\n      }\n      return errors;\n   };\n\n   if (layoutType === \"block\") {\n      return (\n         <>\n            {label && <label htmlFor={formPropsArr[0].id}>{label}</label>}\n            <FormItem formProps={formPropsArr[0]} />\n            <ErrorMessage index={0} />\n         </>\n      );\n   }\n\n   if (layoutType === \"flex\") {\n      return (\n         <>\n            {label && <label htmlFor={formPropsArr[0].id}>{label}</label>}\n            <ul>\n               <li>\n                  <FormItem formProps={formPropsArr[0]} />\n                  <ErrorMessage index={0} />\n               </li>\n               <li>\n                  <FormItem formProps={formPropsArr[1]} />\n                  <ErrorMessage index={1} />\n               </li>\n            </ul>\n         </>\n      );\n   }\n\n   if (layoutType === \"radio-check\") {\n      const Options = formPropsArr.map(\n         ({ id, value, style, optionLabel, ...rest }) => {\n            return (\n               <li key={id}>\n                  <FormItem\n                     formProps={{\n                        id,\n                        value,\n                        style: {\n                           ...RADIO_CHECKBOX_STYLE,\n                           ...(style || {}),\n                        },\n                        ...rest,\n                     }}\n                  />\n                  <label htmlFor={id}>{optionLabel || value}</label>\n               </li>\n            );\n         }\n      );\n      return (\n         <>\n            {label && <label>{label}</label>}\n            <ul>{Options}</ul>\n            <ErrorMessage index={0} />\n         </>\n      );\n   }\n};\n","import { TextareaProps } from \"../..\";\n\nexport const Textarea = ({ formProps }: { formProps: TextareaProps }) => {\n   const { isTextarea, ...rest } = formProps;\n   if (!isTextarea) return null;\n   return <textarea {...rest} {...isTextarea}></textarea>;\n};\n","import { Input } from \"./components/item/Input\";\nimport { Select } from \"./components/item/Select\";\nimport { FieldLayout } from \"./components/FieldLayout\";\nimport { Textarea } from \"./components/item/Textarea\";\n\nexport type SelectProps = {\n   isSelect?: { defaultSelectedIndex?: number; options: string[] };\n} & React.SelectHTMLAttributes<HTMLSelectElement>;\n\nexport type TextareaProps = {\n   isTextarea?: React.TextareaHTMLAttributes<HTMLTextAreaElement>;\n} & React.TextareaHTMLAttributes<HTMLTextAreaElement>;\n\ntype OptionLabel = {\n   optionLabel?: React.ReactNode;\n};\n\nexport type FormProps = React.InputHTMLAttributes<HTMLInputElement> &\n   SelectProps &\n   TextareaProps &\n   OptionLabel;\n\nexport type FormFieldsProps = {\n   label?: string | React.ReactNode;\n   /**  param formProps If you set two in an array, they will be arranged as flex. For select and textarea, set tag attributes to isSelect and isTextarea, respectively. */\n   formProps: FormProps[] | FormProps;\n   /** React.ReactNode[] for validation */\n   errors?: React.ReactNode[] | React.ReactNode;\n} & React.FieldsetHTMLAttributes<HTMLFieldSetElement>;\n\n/**\n *\n * ```jsx\n * <FormField\n\t\tclassName={s.field}\n\t\tlabel=\"Mail\"\n\t\tformProps={{\n\t\t\ttype: \"email\",\n\t\t\tid: \"e-mail\",\n\t\t\tplaceholder: \"t.hashimoto@funtech.inc\",\n\t\t\t...register(\"email\", {\n\t\t\t\trequired: VALIDATION.required,\n\t\t\t\tpattern: {\n\t\t\t\t\tvalue: VALIDATION.emailRegExp,\n\t\t\t\t\tmessage: VALIDATION.email,\n\t\t\t\t},\n\t\t\t}),\n\t\t}}\n\t\terrors={<Error error={errors?.email?.message || \"\"} />}\n\t/>\n```\n */\nexport const FormField = ({\n   label,\n   formProps,\n   errors,\n   ...rest\n}: FormFieldsProps) => {\n   if (errors && Array.isArray(errors) && errors.length > 2) {\n      throw new Error(\"The length of error is up to 2.\");\n   }\n\n   const formPropsArr = Array.isArray(formProps) ? formProps : [formProps];\n\n   const { type, isSelect, isTextarea } = formPropsArr[0];\n   const propsLength = formPropsArr.length;\n\n   if (!(type === \"radio\" || type === \"checkbox\") && propsLength > 2) {\n      throw new Error(\"The length of formProps is up to 2.\");\n   }\n\n   const layoutType = [\"radio\", \"checkbox\"].includes(type || \"\")\n      ? \"radio-check\"\n      : propsLength === 1\n      ? \"block\"\n      : \"flex\";\n\n   return (\n      <fieldset {...rest}>\n         <FieldLayout\n            layoutType={layoutType}\n            formPropsArr={formPropsArr}\n            label={label}\n            errors={errors}\n            FormItem={isSelect ? Select : isTextarea ? Textarea : Input}\n         />\n      </fieldset>\n   );\n};\n","import { useMemo } from \"react\";\n\ntype CustomBreakLineParserProps = {\n   children: string;\n};\n\nexport const CustomBreakLineUtils = {\n   regex: /(\\n|###br\\.[^#]+###|###br###)/,\n   isRegularBreak: (line: string) => line === \"\\n\" || line === \"###br###\",\n   isSpecificBreak: (line: string) => line.match(/###br\\.(.*?)###/),\n   getClassName: (line: string) =>\n      line.match(/(?<=###br\\.).+?(?=###)/)?.[0] || \"\",\n};\n\n/**\n * @returns {(string | JSX.Element)[]} - A React fragment containing the formatted string with line breaks represented as `<br>` elements.\n */\nconst useParsedBreakLine = (string: string): (string | JSX.Element)[] =>\n   useMemo(\n      () =>\n         string.split(CustomBreakLineUtils.regex).map((line, index) => {\n            // \\n or ###br### is a regular line break\n            if (CustomBreakLineUtils.isRegularBreak(line)) {\n               return <br key={index} />;\n            }\n            // ###br.className### is a line break with a specified class name\n            if (CustomBreakLineUtils.isSpecificBreak(line)) {\n               return (\n                  <br\n                     className={CustomBreakLineUtils.getClassName(line)}\n                     key={index}\n                  />\n               );\n            }\n            // Regular text\n            return line;\n         }),\n      [string]\n   );\n\n/**\n * Converts specific markers in a string into HTML line breaks for React components.\n * @param {string} children - The input string to be parsed and formatted. Use `\\n` or `###br###` for regular line breaks, and `###br.className###` for a line break with a specific class.\n * @returns {React.ReactElement} - The formatted string\n */\nconst CustomBreakLineParser = ({\n   children,\n}: CustomBreakLineParserProps): React.ReactElement => {\n   const parsedText = useParsedBreakLine(children);\n   return <>{parsedText}</>;\n};\n\nexport { useParsedBreakLine, CustomBreakLineParser };\n","import { useMemo } from \"react\";\nimport { CustomBreakLineUtils } from \"../CustomBreakLineParser\";\n\ntype SpanOmittedChildren = Omit<\n   React.HTMLAttributes<HTMLSpanElement>,\n   \"children\"\n>;\n\nexport type SplitTextProps = {\n   /** Split by character or by word . For `words`, split by whitespace. */\n   type?: \"chars\" | \"words\";\n   /** It is possible to set exceptional attributes for certain characters only */\n   exception?: {\n      selector: string;\n      attributes?: SpanOmittedChildren;\n   }[];\n   containerProps?: SpanOmittedChildren;\n   children: string;\n} & SpanOmittedChildren;\n\nconst SplitContainer = ({\n   containerProps,\n   ...props\n}: {\n   containerProps?: SpanOmittedChildren;\n} & React.HTMLAttributes<HTMLSpanElement>) => {\n   if (containerProps) {\n      return (\n         <span {...containerProps}>\n            <span {...props} />\n         </span>\n      );\n   }\n   return <span {...props} />;\n};\n\n/**\n * @param children - The input string to be parsed and formatted. Use `\\n` or `###br###` for regular line breaks, and `###br.className###` for a line break with a specific class.\n */\nexport const SplitText = ({\n   type = \"chars\",\n   children,\n   exception,\n   containerProps,\n   ...rest\n}: SplitTextProps) => {\n   const splitTag = type === \"chars\" ? \"\" : \" \";\n\n   const wrappedText = useMemo(\n      () =>\n         children.split(CustomBreakLineUtils.regex).flatMap((line, i) => {\n            if (CustomBreakLineUtils.isRegularBreak(line)) {\n               return [null, <br key={i} />];\n            }\n            if (CustomBreakLineUtils.isSpecificBreak(line)) {\n               return [\n                  null,\n                  <br\n                     key={i}\n                     className={CustomBreakLineUtils.getClassName(line)}\n                  />,\n               ];\n            }\n            return [\n               ...line.split(splitTag).map((char, charI) => {\n                  if (exception) {\n                     const match = exception.find(\n                        (item) => item.selector === char\n                     );\n                     if (match) {\n                        return (\n                           <SplitContainer\n                              key={`${i}-${charI}`}\n                              containerProps={containerProps}\n                              {...rest}\n                              {...match.attributes}>\n                              {char}\n                           </SplitContainer>\n                        );\n                     }\n                  }\n                  return (\n                     <SplitContainer\n                        key={`${i}-${charI}`}\n                        containerProps={containerProps}\n                        {...rest}>\n                        {char === \" \" ? \"\\u00A0\" : char}\n                     </SplitContainer>\n                  );\n               }),\n               null,\n            ];\n         }),\n      [splitTag, children, rest, exception, containerProps]\n   );\n\n   return wrappedText;\n};\n","import { VideoHTMLAttributes, forwardRef } from \"react\";\n\nexport interface VideoProps extends VideoHTMLAttributes<HTMLVideoElement> {\n   fill?: boolean;\n}\n\nexport const Video = forwardRef<HTMLVideoElement, VideoProps>((props, ref) => {\n   const { fill, style, ...rest } = props;\n   return (\n      <video\n         ref={ref}\n         style={\n            fill\n               ? {\n                    ...{\n                       position: \"absolute\",\n                       width: \"100%\",\n                       height: \"100%\",\n                       inset: 0,\n                       color: \"transparent\",\n                    },\n                    ...style,\n                 }\n               : style\n         }\n         {...rest}></video>\n   );\n});\n\nVideo.displayName = \"Video\";\n","type PagingItem<T extends string = \"...\"> = number | T;\n\nconst getRange = <T extends string>(\n   start: number,\n   end: number\n): PagingItem<T>[] => {\n   if (end < start)\n      throw Error(\n         `End number must be higher then start number: start ${start}, end ${start}`\n      );\n\n   const rangeLength = end - start + 1;\n   return Array(rangeLength)\n      .fill(0)\n      .map((_, i) => i + start);\n};\n\nconst clamp = (value: number, lower: number, upper: number) =>\n   Math.min(Math.max(value, lower), upper);\n\nexport const getPageRange = (totalCount: number, perPage: number) => {\n   return getRange(1, Math.ceil(totalCount / perPage));\n};\n\nexport const getPaginationRange = <T extends string>(\n   currentPage: number,\n   totalCount: number,\n   perPage: number,\n   size: number = 5,\n   ellipsis: T = \"...\" as T\n): PagingItem<T>[] => {\n   totalCount = Math.ceil(totalCount / perPage);\n\n   if (totalCount < 1) {\n      console.warn(\"Page count has negative value. Returning empty array.\");\n      return [];\n   }\n\n   if (currentPage < 1) {\n      console.warn(\n         \"Current page has negative value. Current page will be set to 1\"\n      );\n      currentPage = 1;\n   }\n\n   if (currentPage > totalCount) {\n      console.warn(\n         \"Current page is higher than page count. Current page will be set to page count:\",\n         totalCount\n      );\n      currentPage = totalCount;\n   }\n\n   if (size % 2 === 0) {\n      console.warn(\"The size must be odd. The size will be increased by 1\");\n      size += 1;\n   }\n\n   if (size < 5) {\n      console.warn(\"The minimum size is 5. The size will be increased to 5\");\n      size = 5;\n   }\n\n   const offset = (size - 1) / 2;\n   const shouldAddEllipsis = totalCount > size;\n\n   const rangeConfig = {\n      start: clamp(\n         currentPage - offset,\n         1,\n         shouldAddEllipsis ? totalCount - size + 1 : 1\n      ),\n      end: clamp(currentPage + offset, size, totalCount),\n   };\n\n   const pages = getRange<T>(rangeConfig.start, rangeConfig.end);\n\n   if (shouldAddEllipsis && pages[0] !== 1) {\n      pages[0] = 1;\n      pages[1] = ellipsis;\n   }\n   if (shouldAddEllipsis && pages[pages.length - 1] !== totalCount) {\n      pages[pages.length - 1] = totalCount;\n      pages[pages.length - 2] = ellipsis;\n   }\n   return pages;\n};\n","export type EasingTypes =\n   | \"easeInSine\"\n   | \"easeOutSine\"\n   | \"easeInOutSine\"\n   | \"easeInQuad\"\n   | \"easeOutQuad\"\n   | \"easeInOutQuad\"\n   | \"easeInCubic\"\n   | \"easeOutCubic\"\n   | \"easeInOutCubic\"\n   | \"easeInQuart\"\n   | \"easeOutQuart\"\n   | \"easeInOutQuart\"\n   | \"easeInQuint\"\n   | \"easeOutQuint\"\n   | \"easeInOutQuint\"\n   | \"easeInExpo\"\n   | \"easeOutExpo\"\n   | \"easeInOutExpo\"\n   | \"easeInCirc\"\n   | \"easeOutCirc\"\n   | \"easeInOutCirc\"\n   | \"easeInBack\"\n   | \"easeOutBack\"\n   | \"easeInOutBack\"\n   | \"easeInElastic\"\n   | \"easeOutElastic\"\n   | \"easeInOutElastic\"\n   | \"easeInBounce\"\n   | \"easeOutBounce\"\n   | \"easeInOutBounce\";\n\ntype EasingFunctions = {\n   [K in EasingTypes]: (x: number) => number;\n};\n\n/**\n * from https://github.com/ai/easings.net\n */\nexport const Easing: EasingFunctions = Object.freeze({\n   easeInSine(x: number): number {\n      return 1 - Math.cos((x * Math.PI) / 2);\n   },\n   easeOutSine(x: number): number {\n      return Math.sin((x * Math.PI) / 2);\n   },\n   easeInOutSine(x: number): number {\n      return -(Math.cos(Math.PI * x) - 1) / 2;\n   },\n   easeInQuad(x: number): number {\n      return x * x;\n   },\n   easeOutQuad(x: number): number {\n      return 1 - (1 - x) * (1 - x);\n   },\n   easeInOutQuad(x: number): number {\n      return x < 0.5 ? 2 * x * x : 1 - Math.pow(-2 * x + 2, 2) / 2;\n   },\n   easeInCubic(x: number): number {\n      return x * x * x;\n   },\n   easeOutCubic(x: number): number {\n      return 1 - Math.pow(1 - x, 3);\n   },\n   easeInOutCubic(x: number): number {\n      return x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2;\n   },\n   easeInQuart(x: number): number {\n      return x * x * x * x;\n   },\n   easeOutQuart(x: number): number {\n      return 1 - Math.pow(1 - x, 4);\n   },\n   easeInOutQuart(x: number): number {\n      return x < 0.5 ? 8 * x * x * x * x : 1 - Math.pow(-2 * x + 2, 4) / 2;\n   },\n   easeInQuint(x: number): number {\n      return x * x * x * x * x;\n   },\n   easeOutQuint(x: number): number {\n      return 1 - Math.pow(1 - x, 5);\n   },\n   easeInOutQuint(x: number): number {\n      return x < 0.5 ? 16 * x * x * x * x * x : 1 - Math.pow(-2 * x + 2, 5) / 2;\n   },\n   easeInExpo(x: number): number {\n      return x === 0 ? 0 : Math.pow(2, 10 * x - 10);\n   },\n   easeOutExpo(x: number): number {\n      return x === 1 ? 1 : 1 - Math.pow(2, -10 * x);\n   },\n   easeInOutExpo(x: number): number {\n      return x === 0\n         ? 0\n         : x === 1\n         ? 1\n         : x < 0.5\n         ? Math.pow(2, 20 * x - 10) / 2\n         : (2 - Math.pow(2, -20 * x + 10)) / 2;\n   },\n   easeInCirc(x: number): number {\n      return 1 - Math.sqrt(1 - Math.pow(x, 2));\n   },\n   easeOutCirc(x: number): number {\n      return Math.sqrt(1 - Math.pow(x - 1, 2));\n   },\n   easeInOutCirc(x: number): number {\n      return x < 0.5\n         ? (1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2\n         : (Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2;\n   },\n   easeInBack(x: number): number {\n      const c1 = 1.70158;\n      const c3 = c1 + 1;\n\n      return c3 * x * x * x - c1 * x * x;\n   },\n   easeOutBack(x: number): number {\n      const c1 = 1.70158;\n      const c3 = c1 + 1;\n\n      return 1 + c3 * Math.pow(x - 1, 3) + c1 * Math.pow(x - 1, 2);\n   },\n   easeInOutBack(x: number): number {\n      const c1 = 1.70158;\n      const c2 = c1 * 1.525;\n\n      return x < 0.5\n         ? (Math.pow(2 * x, 2) * ((c2 + 1) * 2 * x - c2)) / 2\n         : (Math.pow(2 * x - 2, 2) * ((c2 + 1) * (x * 2 - 2) + c2) + 2) / 2;\n   },\n   easeInElastic(x: number): number {\n      const c4 = (2 * Math.PI) / 3;\n\n      return x === 0\n         ? 0\n         : x === 1\n         ? 1\n         : -Math.pow(2, 10 * x - 10) * Math.sin((x * 10 - 10.75) * c4);\n   },\n   easeOutElastic(x: number): number {\n      const c4 = (2 * Math.PI) / 3;\n\n      return x === 0\n         ? 0\n         : x === 1\n         ? 1\n         : Math.pow(2, -10 * x) * Math.sin((x * 10 - 0.75) * c4) + 1;\n   },\n   easeInOutElastic(x: number): number {\n      const c5 = (2 * Math.PI) / 4.5;\n\n      return x === 0\n         ? 0\n         : x === 1\n         ? 1\n         : x < 0.5\n         ? -(Math.pow(2, 20 * x - 10) * Math.sin((20 * x - 11.125) * c5)) / 2\n         : (Math.pow(2, -20 * x + 10) * Math.sin((20 * x - 11.125) * c5)) / 2 +\n           1;\n   },\n   easeInBounce(x: number): number {\n      return 1 - Easing.easeOutBounce(1 - x);\n   },\n   easeOutBounce(x: number): number {\n      const n1 = 7.5625;\n      const d1 = 2.75;\n\n      if (x < 1 / d1) {\n         return n1 * x * x;\n      } else if (x < 2 / d1) {\n         return n1 * (x -= 1.5 / d1) * x + 0.75;\n      } else if (x < 2.5 / d1) {\n         return n1 * (x -= 2.25 / d1) * x + 0.9375;\n      } else {\n         return n1 * (x -= 2.625 / d1) * x + 0.984375;\n      }\n   },\n   easeInOutBounce(x: number): number {\n      return x < 0.5\n         ? (1 - Easing.easeOutBounce(1 - 2 * x)) / 2\n         : (1 + Easing.easeOutBounce(2 * x - 1)) / 2;\n   },\n});\n"],"names":["Input","formProps","style","rest","jsx","Select","isSelect","defaultSelectedIndex","options","option","i","RADIO_CHECKBOX_STYLE","FieldLayout","layoutType","formPropsArr","label","FormItem","errors","ErrorMessage","index","jsxs","Fragment","Options","id","value","optionLabel","Textarea","isTextarea","FormField","type","propsLength","CustomBreakLineUtils","line","_a","useParsedBreakLine","string","useMemo","CustomBreakLineParser","children","parsedText","SplitContainer","containerProps","props","SplitText","exception","splitTag","char","charI","match","item","Video","forwardRef","ref","fill","getRange","start","end","rangeLength","_","clamp","lower","upper","getPageRange","totalCount","perPage","getPaginationRange","currentPage","size","ellipsis","offset","shouldAddEllipsis","rangeConfig","pages","Easing","x","c2","c4","c5"],"mappings":";;AAEO,MAAMA,IAAQ,CAAC,EAAE,WAAAC,QAA0C;AAC/D,QAAM,EAAE,OAAAC,GAAO,GAAGC,EAAA,IAASF;AAExB,SAAA,gBAAAG;AAAA,IAAC;AAAA,IAAA;AAAA,MACG,GAAGD;AAAA,MACJ,OAAO;AAAA,QACJ,UAAU;AAAA,QACV,GAAGD;AAAA,MACN;AAAA,IAAA;AAAA,EAAA;AAGT,GCXaG,IAAS,CAAC,EAAE,WAAAJ,QAA4C;AAClE,QAAM,EAAE,UAAAK,GAAU,OAAAJ,GAAO,GAAGC,MAASF;AACrC,MAAI,CAACK;AAAiB,WAAA;AAChB,QAAA,EAAE,sBAAAC,GAAsB,SAAAC,EAAY,IAAAF;AAGvC,SAAA,gBAAAF;AAAA,IAAC;AAAA,IAAA;AAAA,MACG,GAAGD;AAAA,MACJ,OAAO;AAAA,QACJ,UAAU;AAAA,QACV,UAAU;AAAA,QACV,GAAID,KAAS,CAAC;AAAA,MACjB;AAAA,MACA,cAAcK,KAAwBC,EAAQD,CAAoB;AAAA,MACjE,UAAAC,EAAQ,IAAI,CAACC,GAAQC,MAClB,gBAAAN,EAAA,UAAA,EAAe,OAAOK,GACnB,UADSA,EAAA,GAAAC,CAEb,CACF;AAAA,IAAA;AAAA,EAAA;AAGV,GCTMC,IAAuB;AAAA,EAC1B,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,MAAM;AAAA,EACN,UAAU;AAAA,EACV,QAAQ;AACX,GAEaC,IAAc,CAAC;AAAA,EACzB,YAAAC;AAAA,EACA,cAAAC;AAAA,EACA,OAAAC;AAAA,EACA,UAAAC;AAAA,EACA,QAAAC;AACH,MAAwB;AACrB,QAAMC,IAAe,CAAC,EAAE,OAAAC,QAChBF,IAGD,MAAM,QAAQA,CAAM,IACdA,EAAOE,CAAK,IAEfF,IALG;AAQb,MAAIJ,MAAe;AAChB,WAEO,gBAAAO,EAAAC,GAAA,EAAA,UAAA;AAAA,MAAAN,uBAAU,SAAM,EAAA,SAASD,EAAa,CAAC,EAAE,IAAK,UAAMC,GAAA;AAAA,MACpD,gBAAAX,EAAAY,GAAA,EAAS,WAAWF,EAAa,CAAC,EAAG,CAAA;AAAA,MACtC,gBAAAV,EAACc,GAAa,EAAA,OAAO,EAAG,CAAA;AAAA,IAC3B,EAAA,CAAA;AAIN,MAAIL,MAAe;AAChB,WAEO,gBAAAO,EAAAC,GAAA,EAAA,UAAA;AAAA,MAAAN,uBAAU,SAAM,EAAA,SAASD,EAAa,CAAC,EAAE,IAAK,UAAMC,GAAA;AAAA,wBACpD,MACE,EAAA,UAAA;AAAA,QAAA,gBAAAK,EAAC,MACE,EAAA,UAAA;AAAA,UAAA,gBAAAhB,EAACY,GAAS,EAAA,WAAWF,EAAa,CAAC,EAAG,CAAA;AAAA,UACtC,gBAAAV,EAACc,GAAa,EAAA,OAAO,EAAG,CAAA;AAAA,QAAA,GAC3B;AAAA,0BACC,MACE,EAAA,UAAA;AAAA,UAAA,gBAAAd,EAACY,GAAS,EAAA,WAAWF,EAAa,CAAC,EAAG,CAAA;AAAA,UACtC,gBAAAV,EAACc,GAAa,EAAA,OAAO,EAAG,CAAA;AAAA,QAAA,GAC3B;AAAA,MAAA,GACH;AAAA,IACH,EAAA,CAAA;AAIN,MAAIL,MAAe,eAAe;AAC/B,UAAMS,IAAUR,EAAa;AAAA,MAC1B,CAAC,EAAE,IAAAS,GAAI,OAAAC,GAAO,OAAAtB,GAAO,aAAAuB,GAAa,GAAGtB,0BAE9B,MACE,EAAA,UAAA;AAAA,QAAA,gBAAAC;AAAA,UAACY;AAAA,UAAA;AAAA,YACE,WAAW;AAAA,cACR,IAAAO;AAAA,cACA,OAAAC;AAAA,cACA,OAAO;AAAA,gBACJ,GAAGb;AAAA,gBACH,GAAIT,KAAS,CAAC;AAAA,cACjB;AAAA,cACA,GAAGC;AAAA,YACN;AAAA,UAAA;AAAA,QACH;AAAA,QACC,gBAAAC,EAAA,SAAA,EAAM,SAASmB,GAAK,eAAeC,GAAM;AAAA,MAAA,EAAA,GAZpCD,CAaT;AAAA,IAEN;AAEH,WAEO,gBAAAH,EAAAC,GAAA,EAAA,UAAA;AAAA,MAASN,KAAA,gBAAAX,EAAC,WAAO,UAAMW,EAAA,CAAA;AAAA,MACxB,gBAAAX,EAAC,QAAI,UAAQkB,EAAA,CAAA;AAAA,MACb,gBAAAlB,EAACc,GAAa,EAAA,OAAO,EAAG,CAAA;AAAA,IAC3B,EAAA,CAAA;AAAA,EAEN;AACH,GCnGaQ,IAAW,CAAC,EAAE,WAAAzB,QAA8C;AACtE,QAAM,EAAE,YAAA0B,GAAY,GAAGxB,EAAA,IAASF;AAChC,SAAK0B,IACG,gBAAAvB,EAAA,YAAA,EAAU,GAAGD,GAAO,GAAGwB,EAAY,CAAA,IADnB;AAE3B,GC8CaC,IAAY,CAAC;AAAA,EACvB,OAAAb;AAAA,EACA,WAAAd;AAAA,EACA,QAAAgB;AAAA,EACA,GAAGd;AACN,MAAuB;AACpB,MAAIc,KAAU,MAAM,QAAQA,CAAM,KAAKA,EAAO,SAAS;AAC9C,UAAA,IAAI,MAAM,iCAAiC;AAGpD,QAAMH,IAAe,MAAM,QAAQb,CAAS,IAAIA,IAAY,CAACA,CAAS,GAEhE,EAAE,MAAA4B,GAAM,UAAAvB,GAAU,YAAAqB,EAAW,IAAIb,EAAa,CAAC,GAC/CgB,IAAchB,EAAa;AAEjC,MAAI,EAAEe,MAAS,WAAWA,MAAS,eAAeC,IAAc;AACvD,UAAA,IAAI,MAAM,qCAAqC;AAGxD,QAAMjB,IAAa,CAAC,SAAS,UAAU,EAAE,SAASgB,KAAQ,EAAE,IACvD,gBACAC,MAAgB,IAChB,UACA;AAGF,SAAA,gBAAA1B,EAAC,YAAU,EAAA,GAAGD,GACX,UAAA,gBAAAC;AAAA,IAACQ;AAAA,IAAA;AAAA,MACE,YAAAC;AAAA,MACA,cAAAC;AAAA,MACA,OAAAC;AAAA,MACA,QAAAE;AAAA,MACA,UAAUX,IAAWD,IAASsB,IAAaD,IAAW1B;AAAA,IAAA;AAAA,EAE5D,EAAA,CAAA;AAEN,GClFa+B,IAAuB;AAAA,EACjC,OAAO;AAAA,EACP,gBAAgB,CAACC,MAAiBA,MAAS;AAAA,KAAQA,MAAS;AAAA,EAC5D,iBAAiB,CAACA,MAAiBA,EAAK,MAAM,iBAAiB;AAAA,EAC/D,cAAc,CAACA;;AACZ,aAAAC,IAAAD,EAAK,MAAM,oCAAwB,OAAnC,gBAAAC,EAAuC,OAAM;AAAA;AACnD,GAKMC,IAAqB,CAACC,MACzBC;AAAA,EACG,MACGD,EAAO,MAAMJ,EAAqB,KAAK,EAAE,IAAI,CAACC,GAAMb,MAE7CY,EAAqB,eAAeC,CAAI,IAClC,gBAAA5B,EAAC,UAAQe,CAAO,IAGtBY,EAAqB,gBAAgBC,CAAI,IAEvC,gBAAA5B;AAAA,IAAC;AAAA,IAAA;AAAA,MACE,WAAW2B,EAAqB,aAAaC,CAAI;AAAA,IAAA;AAAA,IAC5Cb;AAAA,EAAA,IAKPa,CACT;AAAA,EACJ,CAACG,CAAM;AACV,GAOGE,IAAwB,CAAC;AAAA,EAC5B,UAAAC;AACH,MAAsD;AAC7C,QAAAC,IAAaL,EAAmBI,CAAQ;AAC9C,gCAAU,UAAWC,EAAA,CAAA;AACxB,GC9BMC,IAAiB,CAAC;AAAA,EACrB,gBAAAC;AAAA,EACA,GAAGC;AACN,MAGOD,IAEE,gBAAArC,EAAC,UAAM,GAAGqC,GACP,4BAAC,QAAM,EAAA,GAAGC,EAAO,CAAA,EACpB,CAAA,IAGC,gBAAAtC,EAAC,QAAM,EAAA,GAAGsC,EAAO,CAAA,GAMdC,IAAY,CAAC;AAAA,EACvB,MAAAd,IAAO;AAAA,EACP,UAAAS;AAAA,EACA,WAAAM;AAAA,EACA,gBAAAH;AAAA,EACA,GAAGtC;AACN,MAAsB;AACb,QAAA0C,IAAWhB,MAAS,UAAU,KAAK;AAkDlC,SAhDaO;AAAA,IACjB,MACGE,EAAS,MAAMP,EAAqB,KAAK,EAAE,QAAQ,CAACC,GAAM,MACnDD,EAAqB,eAAeC,CAAI,IAClC,CAAC,MAAO,gBAAA5B,EAAA,MAAA,CAAA,GAAQ,CAAG,CAAE,IAE3B2B,EAAqB,gBAAgBC,CAAI,IACnC;AAAA,MACJ;AAAA,MACA,gBAAA5B;AAAA,QAAC;AAAA,QAAA;AAAA,UAEE,WAAW2B,EAAqB,aAAaC,CAAI;AAAA,QAAA;AAAA,QAD5C;AAAA,MAER;AAAA,IAAA,IAGC;AAAA,MACJ,GAAGA,EAAK,MAAMa,CAAQ,EAAE,IAAI,CAACC,GAAMC,MAAU;AAC1C,YAAIH,GAAW;AACZ,gBAAMI,IAAQJ,EAAU;AAAA,YACrB,CAACK,MAASA,EAAK,aAAaH;AAAA,UAAA;AAE/B,cAAIE;AAEE,mBAAA,gBAAA5C;AAAA,cAACoC;AAAA,cAAA;AAAA,gBAEE,gBAAAC;AAAA,gBACC,GAAGtC;AAAA,gBACH,GAAG6C,EAAM;AAAA,gBACT,UAAAF;AAAA,cAAA;AAAA,cAJI,GAAG,CAAC,IAAIC,CAAK;AAAA,YAAA;AAAA,QAQ9B;AAEG,eAAA,gBAAA3C;AAAA,UAACoC;AAAA,UAAA;AAAA,YAEE,gBAAAC;AAAA,YACC,GAAGtC;AAAA,YACH,UAAA2C,MAAS,MAAM,MAAWA;AAAA,UAAA;AAAA,UAHtB,GAAG,CAAC,IAAIC,CAAK;AAAA,QAAA;AAAA,MAIrB,CAEL;AAAA,MACD;AAAA,IAAA,CAEL;AAAA,IACJ,CAACF,GAAUP,GAAUnC,GAAMyC,GAAWH,CAAc;AAAA,EAAA;AAI1D,GC3FaS,IAAQC,EAAyC,CAACT,GAAOU,MAAQ;AAC3E,QAAM,EAAE,MAAAC,GAAM,OAAAnD,GAAO,GAAGC,MAASuC;AAE9B,SAAA,gBAAAtC;AAAA,IAAC;AAAA,IAAA;AAAA,MACE,KAAAgD;AAAA,MACA,OACGC,IACK;AAAA,QAEM,UAAU;AAAA,QACV,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,OAAO;AAAA,QAEV,GAAGnD;AAAA,MAAA,IAENA;AAAA,MAEP,GAAGC;AAAA,IAAA;AAAA,EAAA;AAEb,CAAC;AAED+C,EAAM,cAAc;AC3BpB,MAAMI,IAAW,CACdC,GACAC,MACmB;AACnB,MAAIA,IAAMD;AACD,UAAA;AAAA,MACH,sDAAsDA,CAAK,SAASA,CAAK;AAAA,IAAA;AAGzE,QAAAE,IAAcD,IAAMD,IAAQ;AAC3B,SAAA,MAAME,CAAW,EACpB,KAAK,CAAC,EACN,IAAI,CAACC,GAAGhD,MAAMA,IAAI6C,CAAK;AAC9B,GAEMI,IAAQ,CAACnC,GAAeoC,GAAeC,MAC1C,KAAK,IAAI,KAAK,IAAIrC,GAAOoC,CAAK,GAAGC,CAAK,GAE5BC,IAAe,CAACC,GAAoBC,MACvCV,EAAS,GAAG,KAAK,KAAKS,IAAaC,CAAO,CAAC,GAGxCC,IAAqB,CAC/BC,GACAH,GACAC,GACAG,IAAe,GACfC,IAAc,UACK;AAGnB,MAFaL,IAAA,KAAK,KAAKA,IAAaC,CAAO,GAEvCD,IAAa;AACd,mBAAQ,KAAK,uDAAuD,GAC7D;AAGV,EAAIG,IAAc,MACP,QAAA;AAAA,IACL;AAAA,EAAA,GAEWA,IAAA,IAGbA,IAAcH,MACP,QAAA;AAAA,IACL;AAAA,IACAA;AAAA,EAAA,GAEWG,IAAAH,IAGbI,IAAO,MAAM,MACd,QAAQ,KAAK,uDAAuD,GAC5DA,KAAA,IAGPA,IAAO,MACR,QAAQ,KAAK,wDAAwD,GAC9DA,IAAA;AAGJ,QAAAE,KAAUF,IAAO,KAAK,GACtBG,IAAoBP,IAAaI,GAEjCI,IAAc;AAAA,IACjB,OAAOZ;AAAA,MACJO,IAAcG;AAAA,MACd;AAAA,MACAC,IAAoBP,IAAaI,IAAO,IAAI;AAAA,IAC/C;AAAA,IACA,KAAKR,EAAMO,IAAcG,GAAQF,GAAMJ,CAAU;AAAA,EAAA,GAG9CS,IAAQlB,EAAYiB,EAAY,OAAOA,EAAY,GAAG;AAE5D,SAAID,KAAqBE,EAAM,CAAC,MAAM,MACnCA,EAAM,CAAC,IAAI,GACXA,EAAM,CAAC,IAAIJ,IAEVE,KAAqBE,EAAMA,EAAM,SAAS,CAAC,MAAMT,MAC5CS,EAAAA,EAAM,SAAS,CAAC,IAAIT,GACpBS,EAAAA,EAAM,SAAS,CAAC,IAAIJ,IAEtBI;AACV,GC/CaC,IAA0B,OAAO,OAAO;AAAA,EAClD,WAAWC,GAAmB;AAC3B,WAAO,IAAI,KAAK,IAAKA,IAAI,KAAK,KAAM,CAAC;AAAA,EACxC;AAAA,EACA,YAAYA,GAAmB;AAC5B,WAAO,KAAK,IAAKA,IAAI,KAAK,KAAM,CAAC;AAAA,EACpC;AAAA,EACA,cAAcA,GAAmB;AAC9B,WAAO,EAAE,KAAK,IAAI,KAAK,KAAKA,CAAC,IAAI,KAAK;AAAA,EACzC;AAAA,EACA,WAAWA,GAAmB;AAC3B,WAAOA,IAAIA;AAAA,EACd;AAAA,EACA,YAAYA,GAAmB;AACrB,WAAA,KAAK,IAAIA,MAAM,IAAIA;AAAA,EAC7B;AAAA,EACA,cAAcA,GAAmB;AAC9B,WAAOA,IAAI,MAAM,IAAIA,IAAIA,IAAI,IAAI,KAAK,IAAI,KAAKA,IAAI,GAAG,CAAC,IAAI;AAAA,EAC9D;AAAA,EACA,YAAYA,GAAmB;AAC5B,WAAOA,IAAIA,IAAIA;AAAA,EAClB;AAAA,EACA,aAAaA,GAAmB;AAC7B,WAAO,IAAI,KAAK,IAAI,IAAIA,GAAG,CAAC;AAAA,EAC/B;AAAA,EACA,eAAeA,GAAmB;AAC/B,WAAOA,IAAI,MAAM,IAAIA,IAAIA,IAAIA,IAAI,IAAI,KAAK,IAAI,KAAKA,IAAI,GAAG,CAAC,IAAI;AAAA,EAClE;AAAA,EACA,YAAYA,GAAmB;AACrB,WAAAA,IAAIA,IAAIA,IAAIA;AAAA,EACtB;AAAA,EACA,aAAaA,GAAmB;AAC7B,WAAO,IAAI,KAAK,IAAI,IAAIA,GAAG,CAAC;AAAA,EAC/B;AAAA,EACA,eAAeA,GAAmB;AAC/B,WAAOA,IAAI,MAAM,IAAIA,IAAIA,IAAIA,IAAIA,IAAI,IAAI,KAAK,IAAI,KAAKA,IAAI,GAAG,CAAC,IAAI;AAAA,EACtE;AAAA,EACA,YAAYA,GAAmB;AACrB,WAAAA,IAAIA,IAAIA,IAAIA,IAAIA;AAAA,EAC1B;AAAA,EACA,aAAaA,GAAmB;AAC7B,WAAO,IAAI,KAAK,IAAI,IAAIA,GAAG,CAAC;AAAA,EAC/B;AAAA,EACA,eAAeA,GAAmB;AAC/B,WAAOA,IAAI,MAAM,KAAKA,IAAIA,IAAIA,IAAIA,IAAIA,IAAI,IAAI,KAAK,IAAI,KAAKA,IAAI,GAAG,CAAC,IAAI;AAAA,EAC3E;AAAA,EACA,WAAWA,GAAmB;AACpB,WAAAA,MAAM,IAAI,IAAI,KAAK,IAAI,GAAG,KAAKA,IAAI,EAAE;AAAA,EAC/C;AAAA,EACA,YAAYA,GAAmB;AACrB,WAAAA,MAAM,IAAI,IAAI,IAAI,KAAK,IAAI,GAAG,MAAMA,CAAC;AAAA,EAC/C;AAAA,EACA,cAAcA,GAAmB;AACvB,WAAAA,MAAM,IACR,IACAA,MAAM,IACN,IACAA,IAAI,MACJ,KAAK,IAAI,GAAG,KAAKA,IAAI,EAAE,IAAI,KAC1B,IAAI,KAAK,IAAI,GAAG,MAAMA,IAAI,EAAE,KAAK;AAAA,EAC1C;AAAA,EACA,WAAWA,GAAmB;AACpB,WAAA,IAAI,KAAK,KAAK,IAAI,KAAK,IAAIA,GAAG,CAAC,CAAC;AAAA,EAC1C;AAAA,EACA,YAAYA,GAAmB;AACrB,WAAA,KAAK,KAAK,IAAI,KAAK,IAAIA,IAAI,GAAG,CAAC,CAAC;AAAA,EAC1C;AAAA,EACA,cAAcA,GAAmB;AACvB,WAAAA,IAAI,OACL,IAAI,KAAK,KAAK,IAAI,KAAK,IAAI,IAAIA,GAAG,CAAC,CAAC,KAAK,KACzC,KAAK,KAAK,IAAI,KAAK,IAAI,KAAKA,IAAI,GAAG,CAAC,CAAC,IAAI,KAAK;AAAA,EACvD;AAAA,EACA,WAAWA,GAAmB;AAI3B,WAAO,UAAKA,IAAIA,IAAIA,IAAI,UAAKA,IAAIA;AAAA,EACpC;AAAA,EACA,YAAYA,GAAmB;AAI5B,WAAO,IAAI,UAAK,KAAK,IAAIA,IAAI,GAAG,CAAC,IAAI,UAAK,KAAK,IAAIA,IAAI,GAAG,CAAC;AAAA,EAC9D;AAAA,EACA,cAAcA,GAAmB;AAE9B,UAAMC,IAAK;AAEJ,WAAAD,IAAI,MACL,KAAK,IAAI,IAAIA,GAAG,CAAC,MAAMC,IAAK,KAAK,IAAID,IAAIC,KAAO,KAChD,KAAK,IAAI,IAAID,IAAI,GAAG,CAAC,MAAMC,IAAK,MAAMD,IAAI,IAAI,KAAKC,KAAM,KAAK;AAAA,EACvE;AAAA,EACA,cAAcD,GAAmB;AACxB,UAAAE,IAAM,IAAI,KAAK,KAAM;AAE3B,WAAOF,MAAM,IACR,IACAA,MAAM,IACN,IACA,CAAC,KAAK,IAAI,GAAG,KAAKA,IAAI,EAAE,IAAI,KAAK,KAAKA,IAAI,KAAK,SAASE,CAAE;AAAA,EAClE;AAAA,EACA,eAAeF,GAAmB;AACzB,UAAAE,IAAM,IAAI,KAAK,KAAM;AAE3B,WAAOF,MAAM,IACR,IACAA,MAAM,IACN,IACA,KAAK,IAAI,GAAG,MAAMA,CAAC,IAAI,KAAK,KAAKA,IAAI,KAAK,QAAQE,CAAE,IAAI;AAAA,EAChE;AAAA,EACA,iBAAiBF,GAAmB;AAC3B,UAAAG,IAAM,IAAI,KAAK,KAAM;AAE3B,WAAOH,MAAM,IACR,IACAA,MAAM,IACN,IACAA,IAAI,MACJ,EAAE,KAAK,IAAI,GAAG,KAAKA,IAAI,EAAE,IAAI,KAAK,KAAK,KAAKA,IAAI,UAAUG,CAAE,KAAK,IAChE,KAAK,IAAI,GAAG,MAAMH,IAAI,EAAE,IAAI,KAAK,KAAK,KAAKA,IAAI,UAAUG,CAAE,IAAK,IACjE;AAAA,EACR;AAAA,EACA,aAAaH,GAAmB;AAC7B,WAAO,IAAID,EAAO,cAAc,IAAIC,CAAC;AAAA,EACxC;AAAA,EACA,cAAcA,GAAmB;AAI1B,WAAAA,IAAI,IAAI,OACF,SAAKA,IAAIA,IACRA,IAAI,IAAI,OACT,UAAMA,KAAK,MAAM,QAAMA,IAAI,OAC1BA,IAAI,MAAM,OACX,UAAMA,KAAK,OAAO,QAAMA,IAAI,SAE5B,UAAMA,KAAK,QAAQ,QAAMA,IAAI;AAAA,EAE1C;AAAA,EACA,gBAAgBA,GAAmB;AAChC,WAAOA,IAAI,OACL,IAAID,EAAO,cAAc,IAAI,IAAIC,CAAC,KAAK,KACvC,IAAID,EAAO,cAAc,IAAIC,IAAI,CAAC,KAAK;AAAA,EAChD;AACH,CAAC;;;;;;"}